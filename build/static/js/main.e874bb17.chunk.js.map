{"version":3,"sources":["firebase.js","components/pagecontent.js","components/index.js","components/services.js","components/navbar.js","components/addservice.js","components/footer.js","components/webimages.js","components/portfolio.js","components/service.js","components/login.js","components/privateroute.js","components/admin.js","components/addproject.js","components/addProjectstoService.js","components/editservice.js","components/contact.js","components/editproject.js","components/gallery.js","components/project.js","components/emails.js","components/emaildetails.js","components/createReviewLink.js","js/actions/index.js","components/addprojectimages.js","components/sitemap.js","components/scrolltotop.js","components/pagecontents.js","js/reducers/handleuserReducer.js","components/about.js","js/actioncreators/getUserDetails.js","App.js","js/reducers/useractitvityReducer.js","js/reducers/index.js","js/constants/index.js","js/store/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","fbStorage","storage","fbAuth","auth","PageContent","props","componentDidMount","getContent","pagecontentid","ref","once","snapshot","val","content_active","setState","data","state","Fragment","this","className","content_title","dangerouslySetInnerHTML","__html","content_description","Component","IndexPage","document","title","Services","slist","Object","keys","map","id","s","imgurl","key","to","pathname","serviceid","style","backgroundImage","connect","NavBar","showHamburgerMenu","status","showNav","src","alt","buttonWidth","isActive","onClick","activeClassName","AddService","handleComplete","s_name","s_description","s_image","serviceID","push","console","log","set","service_name","service_description","service_pagename","toString","toLowerCase","replace","service_created_at","Date","now","service_image","error","alert","window","location","reload","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","child","getDownloadURL","then","url","avatarURL","updateState","bind","e","refs","value","type","placeholder","onChange","role","width","aria-valuenow","aria-valuemin","aria-valuemax","target","href","accept","name","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","Footer","Phone","color","rel","LinkedinOption","Instagram","WebImages","componentWillMount","temp","tempLocation","listAll","res","items","images","length","path_","imageLocation","deleteImage","imageL","confirm","delete","catch","message","Portfolio","getProjectsByService","serviceProjects","getProjects","orderByChild","plist","forceUpdate","p","projectid","Service","servicename","match","params","getServiceDetailsByPageName","serviceKey","equalTo","path","pieces_","servicedetails","service_projects","Login","handleSubmit","email","password","a","signInWithEmailAndPassword","history","useractivity","authenticated","PrivateRoute","component","rest","render","Admin","AddProject","p_name","p_description","p_service","p_image","p_location","project_name","project_description","project_service","project_image","project_location","project_pagename","project_created_at","active","EditService","serviceId","serviceDetails","shouldComponentUpdate","nextProps","nextState","filterProjects","updateProjects","newProjectsList","selected","projects","indexOf","label","selectedProjects","deleteProject","index","splice","Close","opt","options","isMulti","s_serviceid","update","handleChangeUsername","event","username","serviceSelected","deletService","remove","showallservices","checked","padding","border","float","Contact","contact_first_name","contact_last_name","contact_email","contact_phone","contact_comments","contact_pagename","contact_request_created_at","required","frameBorder","height","allowFullScreen","require","compose","withProps","withStateHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","demoFancyMapStyles","googleMapURL","loadingElement","containerElement","mapElement","center","lat","lng","isOpen","onToggleOpen","defaultZoom","defaultCenter","defaultOptions","styles","mapTypeControl","position","EditProject","p_projectid","p_active","projectSelected","GalleryU","openLightbox","i","viewerIsOpen","bool","modalIsOpen","currentIndex","closeLightbox","validate","j","backgroundPosition","backgroundSize","onClose","views","Gallery","overflow","marginLeft","gutter","marginRight","Image","backgroundColor","boxSizing","margin","paddingBottom","opacity","Trip","projectpagename","projectname","getProjectDetailsByPageName","getImagesByProject","list","photosList","pageName","projectDetails","ilist","prevProps","getTripDetailsByPageName","Emails","cf_ref","cflist","unreadCount","count","getNumberOfDaysAgo","date","date2","date1","diffTime","Math","abs","floor","cf","EmailDetails","cf_id","updateEmailViewedStatus","currentState","updatedState","contact_viewed","htmlFor","readOnly","CreateReviewLink","updateProject","generatedLink","i_projectid","borderRadius","navigator","clipboard","writeText","UPDATE_USER","SIGN_OUT","AddProjectImages","updateCaption","route","image_caption","caption","i_projectimage","i_projectimagecaption","image_projectid","image_projectimage","image_created_at","updateMultipleImagesToProject","handleMultipleUploadSuccess","downloadURL","oldState","filenames","downloadURLs","multiple","onBlur","Sitemap","withRouter","useEffect","unlisten","listen","scrollTo","contentlist","c_location","c_title","c_description","c_active","content_location","content_pagename","content_created_at","handleUpdate","contentid","c","initialState","pending","userDetails","getUserDetails","getUserDetailsPending","getUserDetailsError","About","fetchUserDetails","user","dispath","uid","App","handleSignOut","signOut","loading","onAuthStateChanged","currentUser","Project","exact","isAuthed","PageContents","CreateReviewLinks","from","User","Home","Mail","Power","userDetailsError","userDetailsPending","dispatch","bindActionCreators","combineReducers","action","userdetails","store","createStore","rootReducer","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e874bb17.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\nconst config = {\n  apiKey: \"AIzaSyAWvWlPb7SDSbPgSVxbLQdDudZhYaGt-cI\",\n  authDomain: \"bythem-f0fdb.firebaseapp.com\",\n  databaseURL: \"https://bythem-f0fdb.firebaseio.com\",\n  projectId: \"bythem-f0fdb\",\n  storageBucket: \"bythem-f0fdb.appspot.com\",\n  messagingSenderId: \"1016948882454\",\n  appId: \"1:1016948882454:web:be72974fb1ed51ed\",\n};\nfirebase.initializeApp(config);\n\nexport const db = firebase.database();\nexport const fbStorage = firebase.storage();\nexport const fbAuth = firebase.auth();\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\n\nclass PageContent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    // this.getServiceDetailsByPageName = this.getServiceDetailsByPageName.bind(this);\n  }\n\n  componentDidMount = () => {\n    this.getContent(this.props.pagecontentid);\n  };\n\n  getContent = (pagecontentid) => {\n    let contentref = db.ref(\"/pagecontent/\" + pagecontentid);\n    contentref.once(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        if (snapshot.val().content_active === \"true\") {\n          this.setState({ data: snapshot.val() });\n        }\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.data ? (\n          <>\n            <h3 className=\"homepage-about-title mb-5\">\n              {this.state.data.content_title}\n            </h3>\n\n            <p\n              className=\"text-left\"\n              dangerouslySetInnerHTML={{\n                __html: this.state.data.content_description,\n              }}\n            ></p>\n          </>\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageContent;\n","import React, { Component } from \"react\";\nimport PageContent from \"../components/pagecontent\";\n\nclass IndexPage extends Component {\n  componentDidMount = () => {\n    document.title =\n      \"THEM STUDIOS | Planning | Interior Design | Furniture & Accessory Design | Landscape Design\";\n  };\n\n  render() {\n    return (\n      <div className=\" index-page text-center\">\n        <div className=\"container\">\n          <h1 className=\"quote my-5\">\n            Simple is hard - Martin Charles Scorsese\n          </h1>\n        </div>\n        <div className=\"container-fluid homepage-images-div\">\n          <div className=\"row\">\n            <div className=\"d-none d-md-block col-md-3 \">\n              <div className=\"homepage-images-left\"></div>\n            </div>\n            <div className=\"col-md-6 \">\n              <div className=\"homepage-images-center\"></div>\n            </div>\n            <div className=\"d-none d-md-block col-md-3\">\n              <div className=\" homepage-images-right\"></div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container mt-5\">\n          <PageContent pagecontentid=\"-MDGRuhFTBixRVFspb4V\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React, { Component } from \"react\";\nimport { db } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nclass Services extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    document.title = \"THEM - Services\"; // SET PAGE TITLE\n\n    // GET ALL SERVICES FROM FIREBASE REAL TIME DATABASE\n    const s_ref = db.ref(\"/services\");\n    s_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ slist: snapshot });\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-content container\">\n          <div className=\"row\">\n            <div className=\"col-12 mb-4\">\n              <h2 className=\"page-title\">SERVICES</h2>\n              <h5 className=\"sdetail-description text-justify\">\n                At <b>Them</b>, we translate our/your vision into reality. The\n                projects of our studios are fulfilled considering your taste and\n                our designs with latest designs. We provide you an album of\n                visualizations which are both functional and aesthetic. With\n                this approach, you receive an everlasting experience of living\n                in your space and we receive imense satisfaction.\n              </h5>\n            </div>\n            {this.state.slist\n              ? Object.keys(this.state.slist.val()).map((id) => {\n                  let s = this.state.slist.val();\n                  let imgurl = s[id][\"service_image\"];\n                  return (\n                    <div key={id} className=\"col-md-6 col-lg-4 mb-4\">\n                      <Link\n                        className=\"no-text-decoration\"\n                        to={{\n                          pathname: `services/${s[id][\"service_pagename\"]}`,\n                          serviceid: `${id}`,\n                        }}\n                      >\n                        <div className=\"card services-card h-100\">\n                          <div\n                            className=\"services-image\"\n                            style={{ backgroundImage: `url(${imgurl})` }}\n                          ></div>\n                          <div className=\"card-body\">\n                            <h5 className=\"card-title service-title\">\n                              {\" \"}\n                              {s[id][\"service_name\"]}\n                            </h5>\n                            <p className=\"card-text service-card-description text-justify\">\n                              {\" \"}\n                              {s[id][\"service_description\"]}\n                            </p>\n                          </div>\n                        </div>\n                      </Link>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, null)(Services);\n","import React, { Component } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { HamburgerCollapseReverse } from \"react-animated-burgers\";\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNav: false,\n    };\n  }\n\n  componentDidMount = () => {};\n  showHamburgerMenu = (status) => {\n    this.setState({ showNav: status });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\" navbar navbar-expand-sm navbar-light fixed-top\">\n          <div className=\"container\">\n            <Link className=\"brand\" to=\"/\">\n              <img\n                src=\"https://firebasestorage.googleapis.com/v0/b/bythem-f0fdb.appspot.com/o/images%2F3e570b10-e4b8-4fbf-9d96-35b100382cf4.png?alt=media&token=f291a73b-4002-4682-a723-ce8d272e43c2\"\n                className=\"logo\"\n                alt=\"logo\"\n              ></img>\n              <h1 className=\"logo-text\">THEM STUDIOS</h1>\n            </Link>\n\n            <HamburgerCollapseReverse\n              className=\"navbar-toggler\"\n              buttonWidth={25}\n              isActive={this.state.showNav}\n              onClick={() => this.showHamburgerMenu(!this.state.showNav)}\n            />\n\n            <div\n              className={\n                this.state.showNav\n                  ? \"navbar-collapse collapse show\"\n                  : \"navbar-collapse collapse\"\n              }\n              id=\"navbarSupportedContent\"\n            >\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item \">\n                  <NavLink\n                    className=\"nav-link\"\n                    onClick={() => this.showHamburgerMenu(false)}\n                    activeClassName=\"nav-link-selected\"\n                    to=\"/index\"\n                  >\n                    <b>H</b>\n                    OME\n                  </NavLink>\n                </li>\n                <li className=\"nav-item \">\n                  <NavLink\n                    className=\"nav-link\"\n                    onClick={() => this.showHamburgerMenu(false)}\n                    activeClassName=\"nav-link-selected\"\n                    to=\"/about-them\"\n                  >\n                    <b>A</b>\n                    BOUT\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    onClick={() => this.showHamburgerMenu(false)}\n                    activeClassName=\"nav-link-selected\"\n                    to=\"/services\"\n                  >\n                    <b>S</b>\n                    ERVICES\n                  </NavLink>\n                </li>\n                <li className=\"nav-item\">\n                  <NavLink\n                    className=\"nav-link\"\n                    onClick={() => this.showHamburgerMenu(false)}\n                    activeClassName=\"nav-link-selected\"\n                    to=\"/portfolio\"\n                  >\n                    <b>P</b>\n                    ORTFOLIO\n                  </NavLink>\n                </li>\n                <li className=\"nav-item \">\n                  <NavLink\n                    className=\"nav-link\"\n                    onClick={() => this.showHamburgerMenu(false)}\n                    activeClassName=\"nav-link-selected\"\n                    to=\"/contact\"\n                  >\n                    <b>C</b>\n                    ONTACT\n                  </NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, {Component}  from \"react\";\nimport {db, fbStorage} from '../firebase';\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass AddService extends Component {\n  \n    constructor(props) {\n        super(props);\n        \n        this.state = {\n           data: ''\n        }\n        this.updateState = this.updateState.bind(this);\n     };\n     updateState(e) {\n        this.setState({s_name: this.refs.s_name.value, s_description: this.refs.s_description.value, s_image: this.refs.s_image.value});\n       \n     }\n\n     componentDidMount = () => {\n     \n     }\n\n     handleComplete = (s_name,s_description, s_image) => {\n         const serviceID = db.ref(\"/services\").push();\n        console.log(s_name+s_description+s_image)\n         serviceID\n         .set(\n           {\n             service_name: s_name,\n             service_description: s_description,\n             service_pagename: s_name.toString().toLowerCase().replace(/\\s/g, '-'),\n             service_created_at: Date.now(),\n             service_image: s_image\n           },\n           function(error) {\n             if (error) {\n               alert(\"Data could not be saved.\" + error);\n             } else {\n               alert(\"Data saved successfully.\");\n               window.location.reload();\n             }\n           }\n         )\n         \n        \n      }\n\n      handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n      handleProgress = progress => this.setState({ progress });\n\n      handleUploadError = error => {\n        this.setState({ isUploading: false });\n        alert(error);\n      };\n\n      handleUploadSuccess = filename => {\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\n        fbStorage.ref(\"images\").child(filename).getDownloadURL().then(url => this.setState({ avatarURL: url, s_image : url }));\n      };\n\n\n\n  render() {\n    return (\n    <React.Fragment>\n            <div className=\"container page-content\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h2>Add new Service</h2>\n                    </div>\n                    <div className=\"col-12\">\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" id=\"service_name\" placeholder=\"Enter Service Name\" ref=\"s_name\" \n                            onChange={this.updateState.bind(this)} />\n                            \n                        </div>\n                        <div className=\"form-group\">\n                            <textarea type=\"text\" className=\"form-control\" id=\"service_description\" placeholder=\"Describe the Service\"  ref=\"s_description\" \n                            onChange={this.updateState.bind(this)}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className=\"form-control\" id=\"service_image\" placeholder=\"paste the URL here\"  ref=\"s_image\"\n                             onChange={this.updateState.bind(this)}\n                            />\n                        </div>\n                       \n                        \n                        <button onClick={() => this.handleComplete(this.state.s_name,this.state.s_description,this.state.s_image)} className=\"btn btn-primary\">Submit</button>\n\n                    </div>\n\n                    <div className=\"col-12 mt-5\">\n                      <h5>Upload images here</h5>\n\n                        {this.state.isUploading &&\n                          <div className=\"progress-bar\" role=\"progressbar\" style={{ width: this.state.progress + '%' }} aria-valuenow={this.state.progress} aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress}</div>\n                        }\n                        {this.state.avatarURL && \n                        <div className=\"uploaded image\">\n                          <label>Image:</label>\n                          <a target=\"_blank\" href={this.state.avatarURL}><img className=\"img img-fluid\" src={this.state.avatarURL} /></a>\n                        </div>\n                        }\n                        <FileUploader\n                          accept=\"image/*\"\n                          name=\"avatar\"\n                          randomizeFilename\n                          storageRef={fbStorage.ref(\"images\")}\n                          onUploadStart={this.handleUploadStart}\n                          onUploadError={this.handleUploadError}\n                          onUploadSuccess={this.handleUploadSuccess}\n                          onProgress={this.handleProgress}\n                        />\n                    </div>\n                </div>\n            </div>\n\n      </React.Fragment>\n    );\n  }\n};\n\nexport default AddService;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkedinOption, Instagram, Phone } from \"grommet-icons\";\n\nconst Footer = () => {\n  return (\n    <React.Fragment>\n      <div className=\"footer mt-5\">\n        <div className=\"container\">\n          <div className=\"row \">\n            <div className=\"col-6\">\n              <Link to=\"\" className=\"no-text-decoration footer-text\">\n                {\" \"}\n                THEM STUDIOS\n              </Link>\n            </div>\n            <div className=\"col-6 text-right\">\n              <a href=\"tel:+917702277247\">\n                <Phone className=\"social-icon\" color=\"white\"></Phone>\n              </a>\n              <a\n                href=\"https://www.linkedin.com/company/them-studios\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <LinkedinOption\n                  className=\"social-icon mx-3\"\n                  color=\"white\"\n                ></LinkedinOption>\n              </a>\n              <a\n                href=\"https://www.instagram.com/bythem.studio/\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <Instagram className=\"social-icon\" color=\"white\"></Instagram>\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Footer;\n","import React, {Component}  from \"react\";\nimport { fbStorage} from '../firebase';\n\nclass WebImages extends Component {\n  \n    constructor(props) {\n        super(props);\n        this.state = {\n           images: ''\n        }\n        this.updateState = this.updateState.bind(this);\n     };\n     updateState(e) {\n        this.setState({s_name: this.refs.s_name.value, s_description: this.refs.s_description.value});\n     }\n\n    componentWillMount = () => {\n        let temp = [];\n        let tempLocation = [];\n        fbStorage.ref(\"images\").listAll().then((res) => {\n            res.items.map((images) => {\n                images.getDownloadURL().then(url => {\n                   tempLocation[tempLocation.length] = images.location.path_;\n                   temp[temp.length] = url;\n                   this.setState({images: temp});\n                   this.setState({imageLocation: tempLocation});\n                })\n            })\n        })\n    }\n\n    deleteImage = (key) =>{\n        let imageL =  this.state.imageLocation;\n        if (window.confirm('Are you sure you want to delete?')) \n        {\n            fbStorage.ref().child(imageL[key]).delete().then(function() {\n                // File deleted successfully\n                alert(\"successfully deleted !!\")\n                window.location.reload();\n              }).catch(function(error) {\n                // Uh-oh, an error occurred!\n                alert(error.message)\n              });\n        }\n    }\n\n    \n\n  render() {\n    return (\n    <React.Fragment>\n            <div className=\"container page-content\">\n                <div className=\"row images-div\">\n                   \n                   {this.state.images && this.state.images.map((url,key) => {\n                       return(\n                           <div className=\"col-6\">\n                              <a href={url} target=\"_blank\"> <img src={url} className=\"img img-fluid\"/></a>\n                              <button className=\"btn btn-danger mt-2\" onClick={() => {this.deleteImage(key)}}>DELETE</button>\n                           </div>\n                       )\n                   }\n                     )}\n                        \n                </div>\n            </div>\n\n      </React.Fragment>\n    );\n  }\n};\n\nexport default WebImages;","import React, { Component } from \"react\";\nimport { db } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    document.title = \"THEM - Portfolio\"; // SET PAGE TITLE\n    // GET ALL PROJECTS FROM FIREBASE REAL TIME DATABASE\n\n    if (!this.props.title) {\n      this.getProjects();\n    } else {\n      this.getProjectsByService(this.props.serviceProjects);\n    }\n  };\n\n  getProjects = () => {\n    const p_ref = db.ref(\"/projects\");\n    p_ref.orderByChild(\"active\").once(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({ plist: snapshot.val() });\n        this.forceUpdate();\n      }\n    });\n  };\n\n  // shouldComponentUpdate = (nextProps, nextState) => {\n  //   if (this.props.serviceKey !== nextProps.serviceKey) {\n  //     this.getProjectsByService(this.props.serviceProjects);\n  //     this.forceUpdate();\n  //     return true;\n  //   }\n  //   return false;\n  // };\n\n  getProjectsByService = (serviceProjects) => {\n    const p_ref = db.ref(\"/projects\");\n    p_ref.orderByChild(\"active\").once(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        this.setState({\n          plist: snapshot.val(),\n          serviceProjects: serviceProjects,\n        });\n        this.forceUpdate();\n      }\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-content container\">\n          <div className=\"row\">\n            {this.state.plist ? (\n              <>\n                <div className=\"col-12 mb-4\">\n                  {this.props.title ? (\n                    <h3 className=\"page-title mt-4\">{this.props.title}</h3>\n                  ) : (\n                    <h2 className=\"page-title\">PORTFOLIO</h2>\n                  )}\n                </div>\n\n                {this.state.serviceProjects && this.state.plist\n                  ? this.state.serviceProjects.map((id) => {\n                      let p = this.state.plist;\n                      return (\n                        <div key={id} className=\"col-md-6 col-lg-4 mb-3\">\n                          <Link\n                            className=\"no-text-decoration\"\n                            to={{\n                              pathname: `/project/${p[id][\"project_pagename\"]}`,\n                              projectid: `${id}`,\n                            }}\n                          >\n                            <div\n                              className=\"portfolio-project-card\"\n                              style={{\n                                backgroundImage: `url(${p[id][\"project_image\"]})`,\n                              }}\n                            >\n                              {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\n                              <div className=\"portfolio-project-short-description\">\n                                <div className=\"project-border-top\"></div>\n                                <div className=\"description text-center\">\n                                  <h5 className=\"description-title mb-0\">\n                                    {\" \"}\n                                    {p[id][\"project_name\"]}\n                                  </h5>\n                                  <small className=\"description-text\">\n                                    {\" \"}\n                                    {p[id][\"project_location\"]}\n                                  </small>\n                                </div>\n                              </div>\n                            </div>\n                          </Link>\n                        </div>\n                      );\n                    })\n                  : Object.keys(this.state.plist).map((id) => {\n                      let p = this.state.plist;\n                      return (\n                        <div key={id} className=\"col-md-6 col-lg-4 mb-3\">\n                          <Link\n                            className=\"no-text-decoration\"\n                            to={{\n                              pathname: `/project/${p[id][\"project_pagename\"]}`,\n                              projectid: `${id}`,\n                            }}\n                          >\n                            <div\n                              className=\"portfolio-project-card\"\n                              style={{\n                                backgroundImage: `url(${p[id][\"project_image\"]})`,\n                              }}\n                            >\n                              {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\n                              <div className=\"portfolio-project-short-description\">\n                                <div className=\"project-border-top\"></div>\n                                <div className=\"description text-center\">\n                                  <h5 className=\"description-title mb-0\">\n                                    {\" \"}\n                                    {p[id][\"project_name\"]}\n                                  </h5>\n                                  <small className=\"description-text\">\n                                    {\" \"}\n                                    {p[id][\"project_location\"]}\n                                  </small>\n                                </div>\n                              </div>\n                            </div>\n                          </Link>\n                        </div>\n                      );\n                    })}\n              </>\n            ) : null}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport Portfolio from \"./portfolio\";\n\nclass Service extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      images: \"\",\n    };\n    // this.getServiceDetailsByPageName = this.getServiceDetailsByPageName.bind(this);\n  }\n\n  componentDidMount = () => {\n    let servicename = this.props.match.params.servicename;\n    this.getServiceDetailsByPageName(servicename);\n  };\n\n  getServiceDetailsByPageName = (servicename) => {\n    let serviceKey = \"\";\n    let serviceRef = db.ref(\"/services\");\n    serviceRef\n      .orderByChild(\"service_pagename\")\n      .equalTo(servicename)\n      .once(\"child_added\", (snapshot) => {\n        document.title = snapshot.val()[\"service_name\"];\n        serviceKey = snapshot.ref.path.pieces_[1];\n        this.setState({\n          servicedetails: snapshot.val(),\n          serviceKey: serviceKey,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          {this.state.servicedetails ? (\n            <div className=\"row\">\n              <div className=\"col-12 mb-3\">\n                <h2 className=\"sdetail-title\">\n                  {this.state.servicedetails[\"service_name\"]}\n                </h2>\n              </div>\n\n              <div className=\"col-12 text-justify\">\n                <h5 className=\"sdetail-description\">\n                  {this.state.servicedetails[\"service_description\"]}\n                </h5>\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        {this.state.servicedetails ? (\n          this.state.servicedetails.service_projects ? (\n            <Portfolio\n              title=\"Related Projects\"\n              serviceKey={this.state.serviceKey}\n              serviceProjects={this.state.servicedetails.service_projects}\n            />\n          ) : null\n        ) : null}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Service;\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { fbAuth } from \"../firebase\";\nimport { connect } from \"react-redux\";\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n  updateState(e) {\n    this.setState({\n      email: this.refs.email.value,\n      password: this.refs.password.value,\n    });\n  }\n\n  handleSubmit = async (email, password) => {\n    fbAuth\n      .signInWithEmailAndPassword(email, password)\n      .then(() => {\n        this.props.history.push(\"/\");\n      })\n      .catch(function (error) {\n        // Handle Errors here.\n        alert(\"Unable to sign in \" + error.message);\n        // ...\n      });\n  };\n\n  render() {\n    if (this.props.useractivity.authenticated) {\n      return <Redirect to=\"/them-admin\" />;\n    } else {\n      return (\n        <React.Fragment>\n          <div className=\"container page-content\">\n            <div className=\"row\">\n              <div className=\"col-12\">\n                <h2>Please login</h2>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    className=\"form-control\"\n                    id=\"user_name\"\n                    placeholder=\"User Name\"\n                    ref=\"email\"\n                    onChange={this.updateState.bind(this)}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    id=\"user_password\"\n                    placeholder=\"Password\"\n                    ref=\"password\"\n                    onChange={this.updateState.bind(this)}\n                  />\n                </div>\n\n                <button\n                  onClick={() =>\n                    this.handleSubmit(this.state.email, this.state.password)\n                  }\n                  className=\"btn btn-primary\"\n                >\n                  Submit\n                </button>\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default connect(mapStateToProps, null)(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function PrivateRoute({\n  component: Component,\n  authenticated,\n  ...rest\n}) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} {...rest} />\n        ) : (\n          <Redirect to=\"/them-login\" />\n        )\n      }\n    />\n  );\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/addservice\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Add New Service{\" \"}\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      Add new service, and image url in the form is the cover\n                      image that is shown on the services page{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/editservice\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Edit / Delete Service{\" \"}\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      You can edit or delete a particular service.{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/addproject\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Add New Project{\" \"}\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      Add new project to Portfolio. Select type of service\n                      dropdown so that will automatically displayed in services\n                      page.{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/editproject\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Edit / Delete Project{\" \"}\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      You can edit or delete a particular project.{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/addprojectimages\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Add Project Images{\" \"}\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      Add Images to a particular project.{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/webimages\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\"> Web Images </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      {\" \"}\n                      View all the images on the website{\" \"}\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/createreviewlinks\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\">\n                      {\" \"}\n                      Create Review Links\n                    </h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      Generate review links to send to Client\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <Link className=\"no-text-decoration\" to=\"/pagecontents\">\n                <div className=\"card services-card h-100\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title service-title\"> Page Contents</h5>\n                    <p className=\"card-text service-card-description text-justify\">\n                      Create or edit page content based on location\n                    </p>\n                  </div>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Admin;\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass AddProject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  componentDidMount = () => {\n    /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\n    const s_ref = db.ref(\"/services\");\n    s_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ slist: snapshot });\n      }\n    });\n  };\n\n  handleComplete = (p_name, p_description, p_service, p_image, p_location) => {\n    const projectID = db.ref(\"/projects\").push();\n    projectID.set(\n      {\n        project_name: p_name,\n        project_description: p_description,\n        project_service: p_service,\n        project_image: p_image,\n        project_location: p_location,\n        project_pagename: p_name.toString().toLowerCase().replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\n        project_created_at: Date.now(),\n        active: true,\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        } else {\n          alert(\"Data saved successfully.\");\n          window.location.reload();\n        }\n      }\n    );\n  };\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n  handleProgress = (progress) => this.setState({ progress });\n\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    alert(error);\n  };\n\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url, p_image: url }));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Add New Project</h2>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.p_name}\n                  id=\"p_name\"\n                  placeholder=\"Enter Project Name\"\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.p_location}\n                  id=\"p_location\"\n                  placeholder=\"Project Location \"\n                  onChange={this.updateState}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.p_description}\n                  id=\"p_description\"\n                  placeholder=\"Describe the Project\"\n                  onChange={this.updateState}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.p_image}\n                  id=\"p_image\"\n                  placeholder=\"Project Cover Image url \"\n                  onChange={this.updateState}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  value={this.state.p_service}\n                  id=\"p_service\"\n                  onChange={this.updateState}\n                >\n                  <option value=\"empty\">SELECT A SERVICE</option>\n                  {this.state.slist &&\n                    Object.keys(this.state.slist.val()).map((id) => {\n                      let s = this.state.slist.val();\n                      return (\n                        <option value={id} key={id}>\n                          {s[id][\"service_name\"]}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n\n              <button\n                onClick={() =>\n                  this.handleComplete(\n                    this.state.p_name,\n                    this.state.p_description,\n                    this.state.p_service,\n                    this.state.p_image,\n                    this.state.p_location\n                  )\n                }\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n            <div className=\"col-12 mt-5\">\n              <h5>Upload images here</h5>\n\n              {this.state.isUploading && (\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: this.state.progress + \"%\" }}\n                  aria-valuenow={this.state.progress}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {this.state.progress}\n                </div>\n              )}\n              {this.state.avatarURL && (\n                <div className=\"uploaded image\">\n                  <label>Image:</label>\n                  <a target=\"_blank\" href={this.state.avatarURL}>\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\n                  </a>\n                </div>\n              )}\n              <FileUploader\n                accept=\"image/*\"\n                name=\"avatar\"\n                randomizeFilename\n                storageRef={fbStorage.ref(\"images\")}\n                onUploadStart={this.handleUploadStart}\n                onUploadError={this.handleUploadError}\n                onUploadSuccess={this.handleUploadSuccess}\n                onProgress={this.handleProgress}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddProject;\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport Select from \"react-select\";\nimport { Close } from \"grommet-icons\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    let serviceId = this.props.serviceId;\n    this.setState({\n      serviceDetails: this.props.serviceDetails,\n    });\n  };\n\n  shouldComponentUpdate = (nextProps, nextState) => {\n    if (this.props.serviceDetails !== nextProps.serviceDetails) {\n      this.filterProjects(nextProps.serviceDetails, nextProps.serviceId);\n      return true;\n    }\n    return false;\n  };\n\n  updateProjects = () => {\n    let newProjectsList = [];\n    if (this.state.selected.length > 0) {\n      this.state.selected.map((res) => {\n        return newProjectsList.push(res.value);\n      });\n    }\n    this.state.newProjectsList.map((res) => {\n      return newProjectsList.push(res.value);\n    });\n\n    if (newProjectsList.length > 0) {\n      db.ref(\"/services/\" + this.state.serviceId)\n        .child(\"service_projects\")\n        .set(newProjectsList);\n      db.ref(\"/services/\" + this.state.serviceId).once(\"value\", (snapshot) => {\n        if (snapshot.val()) {\n          this.filterProjects(snapshot.val(), this.state.serviceId);\n        }\n      });\n    }\n    this.setState({ newProjectsList: null });\n  };\n\n  filterProjects = (serviceDetails, serviceId) => {\n    const p_ref = db.ref(\"/projects\");\n    p_ref.once(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        let projects = [],\n          selected = [];\n        Object.keys(snapshot.val()).map((id) => {\n          if (serviceDetails.service_projects) {\n            serviceDetails.service_projects.indexOf(id) >= 0\n              ? selected.push({\n                  label: snapshot.val()[id][\"project_name\"],\n                  value: id,\n                })\n              : projects.push({\n                  label: snapshot.val()[id][\"project_name\"],\n                  value: id,\n                });\n          } else {\n            projects.push({\n              label: snapshot.val()[id][\"project_name\"],\n              value: id,\n            });\n          }\n        });\n        this.setState({\n          projects: projects,\n          selected: selected,\n          selectedProjects: serviceDetails.service_projects,\n          serviceId: serviceId,\n        });\n        this.forceUpdate();\n      }\n    });\n  };\n\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  deleteProject = (projectid) => {\n    let selected = this.state.selectedProjects;\n    let serviceId = this.state.serviceId;\n    let index = selected.indexOf(projectid);\n    if (selected.indexOf(projectid) >= 0) {\n      selected.splice(index, 1);\n      db.ref(\"/services/\" + this.state.serviceId)\n        .child(\"service_projects\")\n        .set(selected);\n\n      db.ref(\"/services/\" + serviceId).once(\"value\", (snapshot) => {\n        if (snapshot.val()) {\n          this.filterProjects(snapshot.val(), serviceId);\n        }\n      });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12 mb-3\">\n              <h2>Add Projects to Service</h2>\n\n              {this.state.selected ? (\n                <div className=\"d-flex flex-row mb-3\">\n                  <p className=\"mr-2\">Selected Projects:</p>\n                  {this.state.selected.map((res, id) => {\n                    return (\n                      <div key={id} className=\"mx-2\">\n                        <span\n                          className=\"badge badge-pill badge-dark badge-tags\"\n                          onClick={() => {\n                            this.deleteProject(res.value);\n                          }}\n                        >\n                          {res.label}\n                          <Close\n                            className=\"social-icon ml-2\"\n                            color=\"white\"\n                          ></Close>\n                        </span>\n                      </div>\n                    );\n                  })}\n                </div>\n              ) : null}\n\n              <Select\n                onChange={(opt) => {\n                  this.setState({ newProjectsList: opt });\n                }}\n                options={this.state.projects}\n                isMulti\n              ></Select>\n            </div>\n\n            <div className=\"col-12\">\n              <button\n                onClick={() => this.updateProjects()}\n                className=\"btn btn-primary\"\n              >\n                Add Projects\n              </button>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport Add from \"../components/addProjectstoService\";\n\nclass EditService extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    /* Bind service to the dropdown*/\n    const s_ref = db.ref(\"/services\");\n    s_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ slist: snapshot });\n      }\n    });\n  };\n\n  handleComplete = (s_name, s_description, s_image, s_serviceid) => {\n    /* Update the changes made to the service */\n\n    db.ref(\"/services/\" + s_serviceid).update(\n      {\n        service_name: s_name,\n        service_description: s_description,\n        service_pagename: s_name.toString().toLowerCase().replace(\" \", \"-\"),\n        service_created_at: Date.now(),\n        service_image: s_image,\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        } else {\n          alert(\"Data saved successfully.\");\n          window.location.reload();\n        }\n      }\n    );\n  };\n\n  handleChangeUsername = (event) =>\n    this.setState({ username: event.target.value });\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n  handleProgress = (progress) => this.setState({ progress });\n\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    console.error(error);\n  };\n\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url }));\n  };\n\n  serviceSelected = (e) => {\n    if (e.target.value !== \"empty\") {\n      this.setState({ s_serviceid: e.target.value });\n      const s_ref = db.ref(\"/services/\" + e.target.value);\n      s_ref.once(\"value\", (snapshot) => {\n        if (snapshot) {\n          this.setState({\n            s_name: snapshot.val()[\"service_name\"],\n            s_description: snapshot.val()[\"service_description\"],\n            s_image: snapshot.val()[\"service_image\"],\n            serviceDetails: snapshot.val(),\n            serviceProjects: snapshot.val()[\"service_projects\"],\n          });\n        }\n      });\n    }\n  };\n\n  deletService = (id) => {\n    if (window.confirm(\"Are you sure you want to delete?\")) {\n      db.ref(\"/services/\")\n        .child(id)\n        .remove()\n        .then(function () {\n          // File deleted successfully\n          alert(\"successfully deleted !!\");\n          window.location.reload();\n        })\n        .catch(function (error) {\n          // Uh-oh, an error occurred!\n          alert(error.message);\n        });\n    }\n  };\n\n  showallservices = (e) => {\n    this.setState({ showallservices: e.target.checked });\n  };\n\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Edit Service</h2>\n            </div>\n\n            <div className=\"col-12 my-5\">\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  id=\"s_serviceid\"\n                  onChange={this.serviceSelected}\n                  value={this.state.s_serviceid || \"\"}\n                >\n                  <option value=\"empty\">SELECT A SERVICE</option>\n                  {this.state.slist &&\n                    Object.keys(this.state.slist.val()).map((id) => {\n                      let s = this.state.slist.val();\n                      return (\n                        <option key={id} value={id}>\n                          {s[id][\"service_name\"]}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"s_name\"\n                  placeholder=\"Enter Service Name\"\n                  value={this.state.s_name}\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"s_description\"\n                  placeholder=\"Describe the Service\"\n                  onChange={this.updateState}\n                  value={this.state.s_description}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"s_image\"\n                  placeholder=\"paste the URL here\"\n                  onChange={this.updateState}\n                  value={this.state.s_image}\n                />\n              </div>\n\n              <button\n                onClick={() =>\n                  this.handleComplete(\n                    this.state.s_name,\n                    this.state.s_description,\n                    this.state.s_image,\n                    this.state.s_serviceid\n                  )\n                }\n                className=\"btn btn-primary\"\n              >\n                Update Service\n              </button>\n            </div>\n\n            <div className=\"col-12 mt-5\">\n              <h5>Upload images here</h5>\n\n              {this.state.isUploading && (\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: this.state.progress + \"%\" }}\n                  aria-valuenow={this.state.progress}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {this.state.progress}\n                </div>\n              )}\n              {this.state.avatarURL && (\n                <div className=\"uploaded image\">\n                  <label>Image:</label>\n                  <a target=\"_blank\" href={this.state.avatarURL}>\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\n                  </a>\n                </div>\n              )}\n              <FileUploader\n                accept=\"image/*\"\n                name=\"avatar\"\n                randomizeFilename\n                storageRef={fbStorage.ref(\"images\")}\n                onUploadStart={this.handleUploadStart}\n                onUploadError={this.handleUploadError}\n                onUploadSuccess={this.handleUploadSuccess}\n                onProgress={this.handleProgress}\n              />\n            </div>\n\n            <div className=\"col-12 mt-4\">\n              {this.state.s_serviceid ? (\n                <>\n                  <hr />\n                  <Add\n                    serviceId={this.state.s_serviceid}\n                    serviceDetails={this.state.serviceDetails}\n                    serviceProjects={this.state.serviceProjects}\n                  />\n                </>\n              ) : null}\n            </div>\n\n            <div className=\"col-12 mt-5\">\n              <input\n                type=\"checkbox\"\n                onChange={this.showallservices}\n                checked={this.state.showallservices}\n              />{\" \"}\n              SHOW ALL SERVICES\n              <br />\n              <div className=\"row\">\n                {this.state.showallservices &&\n                  Object.keys(this.state.slist.val()).map((id) => {\n                    let s = this.state.slist.val();\n                    return (\n                      <div\n                        className=\"col-12 mb-3\"\n                        style={{ padding: \"10px\", border: \"1px solid black\" }}\n                      >\n                        <span className=\"tex-left\">\n                          {s[id][\"service_name\"]}\n                        </span>\n                        <span style={{ float: \"right\" }}>\n                          <button\n                            onClick={() => this.deletService(id)}\n                            className=\"btn btn-danger\"\n                          >\n                            Delete Service\n                          </button>\n                        </span>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditService;\n","import React, { Component } from \"react\";\nimport { db } from \"../firebase\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.updateState = this.updateState.bind(this);\n  }\n\n  componentDidMount = () => {\n    document.title = \"THEM STUDIOS | Contact THEM\";\n  };\n\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  handleComplete = (\n    contact_first_name,\n    contact_last_name,\n    contact_email,\n    contact_phone,\n    contact_comments\n  ) => {\n    if (\n      contact_first_name &&\n      contact_last_name &&\n      contact_email &&\n      contact_phone &&\n      contact_comments\n    ) {\n      const projectID = db.ref(\"/contactrequests\").push();\n      projectID.set(\n        {\n          contact_first_name: contact_first_name,\n          contact_last_name: contact_last_name,\n          contact_email: contact_email,\n          contact_phone: contact_phone,\n          contact_comments: contact_comments,\n          contact_pagename: contact_first_name\n            .toString()\n            .toLowerCase()\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\n          contact_request_created_at: Date.now(),\n        },\n        function (error) {\n          if (error) {\n            alert(\n              \"Sorry for the trouble. Could not submit form please try later.\" +\n                error\n            );\n          } else {\n            alert(\"Request submitted successfully!!\");\n            window.location.reload();\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-content container\">\n          <div className=\"row\">\n            <div className=\"col-12 mb-4\">\n              <h2 className=\"page-title\">CONTACT</h2>\n            </div>\n            <div className=\"col-12\">\n              <p className=\"mb-4\">\n                We would love to hear from you! Whether your project is big or\n                small, professional design advice will ensure you'll love your\n                space for years to come.\n              </p>\n              <p>\n                <b>THEM STUDIOS</b>\n                <br />\n                <a href=\"Tel: +917702277247\">Tel: +917702277247</a>\n                <br />\n                <a href=\"mailto:maneesh@bythem.studio?subject=THEM ENQUIRY\">\n                  maneesh@bythem.studio\n                </a>\n              </p>\n            </div>\n            <div className=\"col-12 mt-3\">\n              <h4 className=\"mb-2\">How Can We Contact You?</h4>\n\n              <div className=\"row\">\n                <div className=\"col-md-6 mb-2\">\n                  <input\n                    name=\"first name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"contact_first_name\"\n                    placeholder=\"First Name\"\n                    value={this.state.contact_first_name}\n                    onChange={this.updateState}\n                  />\n                </div>\n                <div className=\"col-md-6 mb-2\">\n                  <input\n                    name=\"last name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"contact_last_name\"\n                    placeholder=\"Last Name\"\n                    value={this.state.contact_last_name}\n                    onChange={this.updateState}\n                  />\n                </div>\n                <div className=\"col-md-6 mb-2\">\n                  <input\n                    name=\"email\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"contact_email\"\n                    placeholder=\"Email Address\"\n                    value={this.state.contact_email}\n                    onChange={this.updateState}\n                  />\n                </div>\n                <div className=\"col-md-6 mb-2\">\n                  <input\n                    name=\"number\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"contact_phone\"\n                    placeholder=\"Phone Number\"\n                    value={this.state.contact_phone}\n                    onChange={this.updateState}\n                    required\n                  />\n                </div>\n              </div>\n              <h4 className=\"mt-3 mb-2\">How Can We Help You?</h4>\n              <div className=\"row\">\n                <div className=\"col-12 mb-2\">\n                  <div className=\"form-group\">\n                    <textarea\n                      name=\"additional information\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={this.state.contact_comments}\n                      id=\"contact_comments\"\n                      placeholder=\"Additional information\"\n                      onChange={this.updateState}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12 mb-3 text-center\">\n                  <button\n                    onClick={() =>\n                      this.handleComplete(\n                        this.state.contact_first_name,\n                        this.state.contact_last_name,\n                        this.state.contact_email,\n                        this.state.contact_phone,\n                        this.state.contact_comments\n                      )\n                    }\n                    className=\"btn btn-primary\"\n                  >\n                    Submit\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-12\">\n              <iframe\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d952.0081888958348!2d78.54784052923138!3d17.362156779256775!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bcb996b74434023%3A0x189bf477cc2594c5!2s11-13-981%2Croad%20no.1b%2C%20Rd%20Number%202%2C%20Green%20Hills%20Colony%2C%20Haripuri%20Colony%2C%20Vasavi%20Colony%2C%20L.%20B.%20Nagar%2C%20Hyderabad%2C%20Telangana%20500035%2C%20India!5e0!3m2!1sen!2sus!4v1569088708641!5m2!1sen!2sus\"\n                frameBorder=\"0\"\n                style={{ width: \"100%\", height: \"400px\" }}\n                allowFullScreen={false}\n              ></iframe>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst { compose, withProps, withStateHandlers } = require(\"recompose\");\nconst {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} = require(\"react-google-maps\");\nconst demoFancyMapStyles = require(\"./googlemapstyle.json\");\n\nconst Googlemap = compose(\n  withProps({\n    googleMapURL:\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCy7GTXR3u5zjyD3wFPbN7YAMlIs3t82Gk&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n    center: { lat: 25.03, lng: 121.6 },\n  }),\n  withStateHandlers(\n    () => ({\n      isOpen: false,\n    }),\n    {\n      onToggleOpen: ({ isOpen }) => () => ({\n        isOpen: !isOpen,\n      }),\n    }\n  ),\n  withScriptjs,\n  withGoogleMap\n)((props) => (\n  <GoogleMap\n    defaultZoom={19}\n    defaultCenter={{ lat: 17.362209, lng: 78.548439 }}\n    defaultOptions={{ styles: demoFancyMapStyles, mapTypeControl: false }}\n  >\n    <Marker position={{ lat: 17.362209, lng: 78.548439 }} />\n  </GoogleMap>\n));\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\n\nclass EditProject extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    /* Bind service to the dropdown*/\n    const p_ref = db.ref(\"/projects\");\n    p_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ plist: snapshot });\n      }\n    });\n\n    const s_ref = db.ref(\"/services\");\n    s_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ slist: snapshot });\n      }\n    });\n  };\n\n  handleComplete = (\n    p_name,\n    p_description,\n    p_image,\n    p_projectid,\n    p_service,\n    p_location,\n    p_active\n  ) => {\n    /* Update the changes made to the service */\n    db.ref(\"/projects/\" + p_projectid).update(\n      {\n        project_name: p_name,\n        project_description: p_description,\n        project_service: p_service,\n        project_image: p_image,\n        project_location: p_location,\n        project_pagename: p_name.toString().toLowerCase().replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\n        project_created_at: Date.now(),\n        active: p_active,\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        } else {\n          alert(\"Data saved successfully.\");\n          window.location.reload();\n        }\n      }\n    );\n  };\n\n  handleChangeUsername = (event) =>\n    this.setState({ username: event.target.value });\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n  handleProgress = (progress) => this.setState({ progress });\n\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    console.error(error);\n  };\n\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url }));\n  };\n\n  projectSelected = (e) => {\n    if (e.target.value !== \"empty\") {\n      this.setState({ p_projectid: e.target.value });\n      const s_ref = db.ref(\"/projects/\" + e.target.value);\n      s_ref.once(\"value\", (snapshot) => {\n        if (snapshot) {\n          this.setState({\n            p_name: snapshot.val()[\"project_name\"],\n            p_description: snapshot.val()[\"project_description\"],\n            p_image: snapshot.val()[\"project_image\"],\n            p_location: snapshot.val()[\"project_location\"],\n            p_service: snapshot.val()[\"project_service\"],\n            p_active: snapshot.val()[\"active\"],\n          });\n        }\n      });\n    }\n  };\n\n  deleteProject = (id) => {\n    if (window.confirm(\"Are you sure you want to delete?\")) {\n      db.ref(\"/projects/\")\n        .child(id)\n        .remove()\n        .then(function () {\n          // File deleted successfully\n          alert(\"successfully deleted !!\");\n          window.location.reload();\n        })\n        .catch(function (error) {\n          // Uh-oh, an error occurred!\n          alert(error.message);\n        });\n    }\n  };\n\n  showallservices = (e) => {\n    this.setState({ showallservices: e.target.checked });\n  };\n\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Edit Project</h2>\n            </div>\n\n            <div className=\"col-12 my-5\">\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  id=\"p_projectid\"\n                  onChange={this.projectSelected}\n                  value={this.state.p_projectid}\n                >\n                  <option value=\"empty\">SELECT A PROJECT</option>\n                  {this.state.plist &&\n                    Object.keys(this.state.plist.val()).map((id) => {\n                      let p = this.state.plist.val();\n                      return (\n                        <option key={id} value={id}>\n                          {p[id][\"project_name\"]}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"p_name\"\n                  placeholder=\"Enter Project Name\"\n                  value={this.state.p_name}\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"p_location\"\n                  placeholder=\"Project Location\"\n                  onChange={this.updateState}\n                  value={this.state.p_location}\n                />\n              </div>\n              <div className=\"form-group\">\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"p_description\"\n                  placeholder=\"Describe the Project\"\n                  onChange={this.updateState}\n                  value={this.state.p_description}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"p_image\"\n                  placeholder=\"paste the URL here\"\n                  onChange={this.updateState}\n                  value={this.state.p_image}\n                />\n              </div>\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  id=\"p_service\"\n                  onChange={this.updateState}\n                  value={this.state.p_service}\n                >\n                  <option value=\"empty\">SELECT A SERVICE</option>\n                  {this.state.slist &&\n                    Object.keys(this.state.slist.val()).map((id) => {\n                      let s = this.state.slist.val();\n                      return (\n                        <option key={id} value={id}>\n                          {s[id][\"service_name\"]}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  id=\"p_active\"\n                  onChange={this.updateState}\n                  value={this.state.p_active}\n                >\n                  <option value=\"empty\">Select Status</option>\n                  <option value=\"true\">True</option>\n                  <option value=\"false\">False</option>\n                </select>\n              </div>\n\n              <button\n                onClick={() =>\n                  this.handleComplete(\n                    this.state.p_name,\n                    this.state.p_description,\n                    this.state.p_image,\n                    this.state.p_projectid,\n                    this.state.p_service,\n                    this.state.p_location,\n                    this.state.p_active\n                  )\n                }\n                className=\"btn btn-primary\"\n              >\n                Update Project\n              </button>\n            </div>\n\n            <div className=\"col-12 mt-5\">\n              <h5>Upload images here</h5>\n\n              {this.state.isUploading && (\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: this.state.progress + \"%\" }}\n                  aria-valuenow={this.state.progress}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {this.state.progress}\n                </div>\n              )}\n              {this.state.avatarURL && (\n                <div className=\"uploaded image\">\n                  <label>Image:</label>\n                  <a target=\"_blank\" href={this.state.avatarURL}>\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\n                  </a>\n                </div>\n              )}\n              <FileUploader\n                accept=\"image/*\"\n                name=\"avatar\"\n                randomizeFilename\n                storageRef={fbStorage.ref(\"images\")}\n                onUploadStart={this.handleUploadStart}\n                onUploadError={this.handleUploadError}\n                onUploadSuccess={this.handleUploadSuccess}\n                onProgress={this.handleProgress}\n              />\n            </div>\n\n            <div className=\"col-12 mt-5\">\n              <input\n                type=\"checkbox\"\n                onChange={this.showallservices}\n                checked={this.state.showallservices}\n              />{\" \"}\n              SHOW ALL PROJECTS\n              <br />\n              <div className=\"row\">\n                {this.state.showallservices &&\n                  Object.keys(this.state.plist.val()).map((id) => {\n                    let p = this.state.plist.val();\n                    return (\n                      <div\n                        className=\"col-12 mb-3\"\n                        style={{ padding: \"10px\", border: \"1px solid black\" }}\n                      >\n                        <span className=\"tex-left\">\n                          {p[id][\"project_name\"]}\n                        </span>\n                        <span style={{ float: \"right\" }}>\n                          <button\n                            onClick={() => this.deleteProject(id)}\n                            className=\"btn btn-danger\"\n                          >\n                            Delete Project\n                          </button>\n                        </span>\n                      </div>\n                    );\n                  })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EditProject;\n","import React, { Component } from \"react\";\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\n\n\nclass GalleryU extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n       validate: false,\n    viewerIsOpen: false,\n      modalIsOpen: false\n  \n      }\n    };\n  componentDidMount = () => {\n  }\n  //  openLightbox = (event,{index}) => {\n  //   this.viewerIsOpen(true,index);\n  // }\n\n  openLightbox = (i) => {\n    \n    this.viewerIsOpen(true,i);\n  }\n  viewerIsOpen = (bool,index) => {\n    // setCurrentImage(index);\n    // setViewerIsOpen(true);\n\n    this.setState({modalIsOpen:bool,currentIndex:index})\n  }\n\n   closeLightbox = () => {\n    this.setState({modalIsOpen:false,currentIndex:0})\n  }\n\n\n\n  render() {\n    const  currentIndex  = this.state.currentIndex;\n      return (\n            <div>\n              <Gallery>\n            {this.props.images.map(({ src }, j) => (\n              <Image onClick={() => this.openLightbox(j)} key={src}>\n                <div style={{backgroundImage:`url(${src})`,height:'200px',backgroundPosition:'center',backgroundSize:'cover'}}></div>\n                \n              </Image>\n            ))}\n          </Gallery>\n          <ModalGateway>\n            {this.state.modalIsOpen ? (\n              <Modal onClose={this.closeLightbox}>\n                <Carousel views={this.props.images} currentIndex={currentIndex} />\n              </Modal>\n            ) : null}\n          </ModalGateway>\n            </div>\n          );\n      \n  }\n  \n}\n\nconst Gallery = (props) => (\n  <div\n    style={{\n      overflow: 'hidden',\n      marginLeft: -gutter,\n      marginRight: -gutter,\n    }}\n    {...props}\n  />\n);\n\n\nconst gutter = 2;\nconst Image = (props) => (\n  <div\n    style={{\n      backgroundColor: '#eee',\n      boxSizing: 'border-box',\n      backgroundPosition:'center',\n      float: 'left',\n      margin: gutter,\n      overflow: 'hidden',\n      height: '200px',\n      paddingBottom: '16%',\n      position: 'relative',\n      width: `calc(33.33% - ${gutter * 2}px)`,\n\n      ':hover': {\n        opacity: 0.9,\n      },\n    }}\n    {...props}\n  />\n);\n\nexport default  GalleryU;","import React, { Component } from \"react\";\nimport { db } from '../firebase';\nimport { History, Star, Money, Accessibility } from \"grommet-icons\";\nimport GalleryU from \"./gallery\";\n\nclass Trip extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ilist: false\n    }\n  }\n  componentDidUpdate(prevProps) {\n    // will be true\n    const locationChanged =\n      this.props.location !== prevProps.location;\n      if(locationChanged)\n      {\n        let projectpagename = this.props.match.params.projectname;\n        this.getTripDetailsByPageName(projectpagename);\n      }\n     \n    // INCORRECT, will *always* be false because history is mutable.\n    // const locationChanged =\n    //   this.props.history.location !== prevProps.history.location;\n  }\n\n  componentDidMount = () => {\n    let projectpagename = this.props.match.params.projectname;\n    this.getProjectDetailsByPageName(projectpagename);\n  }\n\n  getImagesByProject = (projectid) => {\n    let list, photosList = [];\n    let tripsRef = db.ref(\"/projectimages\");\n    tripsRef.orderByChild(\"image_projectid\").equalTo(projectid).once(\"value\", snapshot => {\n      if (snapshot.val()) {\n        list = snapshot.val();\n        Object.keys(list).map((id, index) => {\n          photosList.push({ 'src': list[id][\"image_projectimage\"], \n          'caption':list[id][\"image_caption\"] });\n        })\n        this.setState({ photosList: photosList });\n      } else {\n        this.setState({ photosList: null })\n      }\n    })\n  }\n\n  getProjectDetailsByPageName = (pageName) => {\n    //Search function firebase realtime database this way of getting data is efficient.\n    let tripRef = db.ref(\"/projects\");\n    tripRef.orderByChild(\"project_pagename\").equalTo(pageName).once(\"child_added\", snapshot => {\n      \n      document.title = snapshot.val()[\"project_name\"];\n      this.setState({ projectDetails: snapshot.val() });\n      this.getImagesByProject(snapshot.key);\n    })\n  }\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"\">\n          {this.state.projectDetails ?\n            <div className=\"tripgroup-details\">\n             \n              <div className=\"container\">\n              <div className=\"row\">\n                    <div className=\"col-12 mb-3\">\n                    <h2 className=\"sdetail-title\">{this.state.projectDetails[\"project_name\"]}</h2>\n                    </div>\n                    \n                    <div className=\"col-12 text-justify\">\n                    <h5 className=\"sdetail-description\">{this.state.projectDetails[\"project_description\"]}</h5>\n                    </div>\n                  <div className=\"col-12 my-2\">\n                    {this.state.photosList ? (\n                      <GalleryU images={this.state.photosList} />\n                    ) : null}\n                  </div>\n                  \n                </div>\n              </div>\n            </div>: null\n          }\n        </div>\n\n      </React.Fragment>\n    );\n  }\n};\n\nexport default Trip;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { db } from \"../firebase\";\n\nclass Emails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unreadCount: 0,\n    };\n  }\n\n  componentDidMount = () => {\n    const cf_ref = db.ref(\"/contactrequests\");\n    cf_ref.orderByChild(\"contact_name\").once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ cflist: snapshot });\n      }\n    });\n\n    let unreadCount = 0;\n\n    cf_ref\n      .orderByChild(\"contact_viewed\")\n      .equalTo(false)\n      .once(\"value\", function (snapshot) {\n        return unreadCount;\n      })\n      .then((unreadCount) => {\n        let count;\n        if (unreadCount.val()) {\n          count = Object.keys(unreadCount.val()).length;\n        } else {\n          count = 0;\n        }\n        this.setState({ unreadCount: count });\n      });\n  };\n\n  getNumberOfDaysAgo = (date) => {\n    const date2 = new Date(Date.now());\n    const date1 = new Date(date);\n    const diffTime = Math.abs(date2 - date1);\n\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"my-3\">\n            <p>{this.state.unreadCount} unread email(s)</p>\n          </div>\n          <div className=\"list-group\">\n            {this.state.cflist &&\n              Object.keys(this.state.cflist.val()).map((id) => {\n                let cf = this.state.cflist.val();\n                return (\n                  <Link\n                    key={id}\n                    className={\n                      \"list-group-item list-group-item-action no-text-decoration \" +\n                      (cf[id][\"contact_viewed\"] ? \" \" : \"email-unread\")\n                    }\n                    to={{ pathname: `/email/${[id]}` }}\n                  >\n                    <div className=\"d-flex w-100 justify-content-between\">\n                      <h6 className=\"mb-2 text-dark\">\n                        <b>From:</b> {cf[id][\"contact_email\"]}\n                      </h6>\n                      <small>\n                        {this.getNumberOfDaysAgo(\n                          cf[id][\"contact_request_created_at\"]\n                        )}{\" \"}\n                        day(s) ago\n                      </small>\n                    </div>\n                    <small className=\"text-muted\">\n                      <b>SUBJECT:</b> {cf[id][\"contact_comments\"]}\n                    </small>\n                  </Link>\n                );\n              })}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Emails;\n","import React, { Component } from \"react\";\nimport { db } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\n\nclass EmailDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount = () => {\n    let cf_id = this.props.match.params.email;\n    const cf_ref = db.ref(\"/contactrequests/\" + cf_id);\n    cf_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ cflist: snapshot.val() });\n      }\n    });\n  };\n\n  getNumberOfDaysAgo = (date) => {\n    const date2 = new Date(Date.now());\n    const date1 = new Date(date);\n    const diffTime = Math.abs(date2 - date1);\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\n  };\n\n  updateEmailViewedStatus = (currentState) => {\n    let updatedState;\n    if (currentState) {\n      updatedState = false;\n    } else {\n      updatedState = true;\n    }\n    let cf_id = this.props.match.params.email;\n    const cf_ref = db.ref(\"/contactrequests/\" + cf_id);\n    cf_ref.update(\n      {\n        contact_viewed: updatedState,\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        } else {\n          alert(\"Updated Status Successfully.\");\n          window.location.reload();\n        }\n      }\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"list-group\">\n            {this.state.cflist && (\n              <div className=\"emailDetails\">\n                <div className=\"row email-details-header mb-3\">\n                  <div className=\"col-12\">\n                    <p className=\"text-dark d-inline\">\n                      FROM: {this.state.cflist[\"contact_email\"]}\n                    </p>\n                    <small className=\"d-inline float-right\">\n                      {this.getNumberOfDaysAgo(\n                        this.state.cflist[\"contact_request_created_at\"]\n                      )}{\" \"}\n                      day(s) ago\n                    </small>\n                  </div>\n\n                  <div className=\"col-md-6 mb-2 text-center\">\n                    <Link\n                      className=\"btn btn-primary btn-submit text-white\"\n                      onClick={() =>\n                        this.updateEmailViewedStatus(\n                          this.state.cflist[\"contact_viewed\"]\n                        )\n                      }\n                    >\n                      {this.state.cflist[\"contact_viewed\"]\n                        ? \"Mark As Unread\"\n                        : \"Mark As Read\"}\n                    </Link>\n                  </div>\n                  <div className=\"col-md-6 mb-2 text-center\">\n                    <a\n                      className=\"btn btn-primary btn-submit text-white\"\n                      href={\"mailto:\" + this.state.cflist[\"contact_email\"]}\n                    >\n                      Email Customer\n                    </a>\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"emailName\">Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"emailName\"\n                    value={\n                      this.state.cflist[\"contact_first_name\"] +\n                      \" \" +\n                      this.state.cflist[\"contact_last_name\"]\n                    }\n                    readOnly\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"emailEAddress\">Email Address</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"emailEAddress\"\n                    value={this.state.cflist[\"contact_email\"]}\n                    readOnly\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"emailPhone\">Phone Number</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"emailPhone\"\n                    value={\n                      this.state.cflist[\"contact_phone\"]\n                        ? this.state.cflist[\"contact_phone\"]\n                        : \"N/A\"\n                    }\n                    readOnly\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"emailMessage\">Message</label>\n                  <textarea\n                    className=\"form-control\"\n                    id=\"emailMessage\"\n                    value={this.state.cflist[\"contact_comments\"]}\n                    readOnly\n                  />\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default EmailDetails;\n","import React, { Component } from \"react\";\nimport { db } from \"../firebase\";\nimport { Link } from \"react-router-dom\";\n\nclass CreateReviewLink extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    document.title = \"THEM - Create Link\"; // SET PAGE TITLE\n    // GET ALL PROJECTS FROM FIREBASE REAL TIME DATABASE\n\n    const p_ref = db.ref(\"/projects\");\n    p_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ plist: snapshot });\n        this.forceUpdate();\n      }\n    });\n  };\n\n  updateProject = (e) => {\n    if (!e.target.value || e.target.value === \"empty\") {\n      this.setState({ projectid: null, generatedLink: null });\n    } else {\n      let url = \"https://bythem.studio/feedback/\" + e.target.value;\n      this.setState({ projectid: e.target.value, generatedLink: url });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"page-content container\">\n          <div className=\"row\">\n            {this.state.plist ? (\n              <>\n                <div className=\"col-12 mb-4\">\n                  <h3>Create Review Link</h3>\n                </div>\n                <div className=\"form-group col-12\">\n                  <select\n                    className=\"form-control\"\n                    value={this.state.i_projectid}\n                    id=\"i_projectid\"\n                    onChange={this.updateProject}\n                  >\n                    <option value=\"empty\">SELECT A PROJECT</option>\n                    {this.state.plist &&\n                      Object.keys(this.state.plist.val()).map((id) => {\n                        let p = this.state.plist.val();\n                        return (\n                          <option value={id} key={id}>\n                            {p[id][\"project_name\"]}\n                          </option>\n                        );\n                      })}\n                  </select>\n                </div>\n                <div className=\"col-12 my-3\">\n                  {this.state.generatedLink ? (\n                    <div\n                      style={{\n                        backgroundColor: \"rgba(63,63,63,1)\",\n                        padding: \"20px\",\n                        borderRadius: \"7px\",\n                      }}\n                      className=\"d-flex flex-row\"\n                    >\n                      <div className=\"text-white\">\n                        {this.state.generatedLink}\n                      </div>\n\n                      <div className=\"ml-auto\">\n                        <button\n                          className=\"btn btn-primary btn-sm\"\n                          onClick={() =>\n                            navigator.clipboard.writeText(\n                              this.state.generatedLink\n                            )\n                          }\n                        >\n                          COPY\n                        </button>\n                      </div>\n                    </div>\n                  ) : null}\n                </div>\n              </>\n            ) : null}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateReviewLink;\n","export const FETCH_USERDETAILS_PENDING = \"FETCH_USERDETAILS_PENDING\";\nexport const FETCH_USERDETAILS_SUCCESS = \"FETCH_USERDETAILS_SUCCESS\";\nexport const FETCH_USERDETAILS_ERROR = \"FETCH_USERDETAILS_ERROR\";\n\n/** Update user details when the firebase authentication is changed */\nexport const UPDATE_USER = (auth) => {\n  return {\n    type: \"UPDATE_USER\",\n    auth: auth,\n  };\n};\n\n/** Update the store as the user signs out */\nexport const SIGN_OUT = () => {\n  return {\n    type: \"SIGNOUT_USER\",\n  };\n};\n\nconst initialstate = {\n  pending: false,\n  userDetails: [],\n  error: null,\n};\n\nexport function fetchUserDetailsPending() {\n  return {\n    type: FETCH_USERDETAILS_PENDING,\n    pending: true,\n  };\n}\nexport function fetchUserDetailsSuccess(userDetails) {\n  return {\n    type: FETCH_USERDETAILS_SUCCESS,\n    pending: false,\n    userDetails: userDetails,\n  };\n}\nexport function fetchUserDetailsError(error) {\n  return {\n    type: FETCH_USERDETAILS_ERROR,\n    error: error,\n    pending: false,\n  };\n}\n","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\nimport FileUploader from \"react-firebase-file-uploader\";\nimport GalleryU from \"./gallery\";\n\nclass AddProjectImages extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n      filenames: [],\n      downloadURLs: [],\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  updateProject = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n\n    if (e.target.value || e.target.value !== \"empty\") {\n      this.getImagesByProject(e.target.value);\n    }\n  };\n\n  componentDidMount = () => {\n    /** BIND PROJECTS DROPDOWN WITH AVAILABLE SERVICE */\n    const p_ref = db.ref(\"/projects\");\n    p_ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ plist: snapshot });\n      }\n    });\n  };\n\n  updateCaption = (id, val, route) => {\n    if (val) {\n      let ref = db.ref(\"/projectimages/\" + route);\n      ref.update({\n        image_caption: val,\n      });\n      this.getImagesByProject(this.state.i_projectid);\n    }\n  };\n\n  getImagesByProject = (projectid) => {\n    let list,\n      photosList = [];\n    let projectimagesRef = db.ref(\"/projectimages\");\n    projectimagesRef\n      .orderByChild(\"image_projectid\")\n      .equalTo(projectid)\n      .once(\"value\", (snapshot) => {\n        if (snapshot.val()) {\n          list = snapshot.val();\n          Object.keys(list).map((id, index) => {\n            photosList.push({\n              src: list[id][\"image_projectimage\"],\n              caption: list[id][\"image_caption\"],\n              route: id,\n            });\n          });\n          this.setState({ photosList: photosList });\n        } else {\n          this.setState({ photosList: null });\n        }\n      });\n  };\n\n  handleComplete = (i_projectid, i_projectimage, i_projectimagecaption) => {\n    const projectID = db.ref(\"/projectimages\").push();\n    projectID.set(\n      {\n        image_projectid: i_projectid,\n        image_projectimage: i_projectimage,\n        image_caption: i_projectimagecaption,\n        image_created_at: Date.now(),\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        } else {\n          alert(\"Data saved successfully.\");\n          window.location.reload();\n        }\n      }\n    );\n  };\n\n  updateMultipleImagesToProject = async (\n    i_projectid,\n    i_projectimage,\n    i_projectimagecaption\n  ) => {\n    const projectID = await db.ref(\"/projectimages\").push();\n    projectID.set(\n      {\n        image_projectid: i_projectid,\n        image_projectimage: i_projectimage,\n        image_caption: i_projectimagecaption,\n        image_created_at: Date.now(),\n      },\n      function (error) {\n        if (error) {\n          alert(\"Data could not be saved.\" + error);\n        }\n      }\n    );\n    this.getImagesByProject(i_projectid);\n  };\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n  handleProgress = (progress) => this.setState({ progress });\n\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    alert(error);\n  };\n\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url, i_projectimage: url }));\n  };\n\n  handleMultipleUploadSuccess = async (filename) => {\n    let downloadURL = await fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL();\n\n    this.setState((oldState) => ({\n      filenames: [...oldState.filenames, filename],\n      downloadURLs: [...oldState.downloadURLs, downloadURL],\n      progress: 100,\n      isUploading: false,\n    }));\n    //console.log(downloadURL);\n    this.updateMultipleImagesToProject(\n      this.state.i_projectid,\n      downloadURL,\n      \" \"\n    );\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Add New Project Image</h2>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  value={this.state.i_projectid}\n                  id=\"i_projectid\"\n                  onChange={this.updateProject}\n                >\n                  <option value=\"empty\">SELECT A PROJECT</option>\n                  {this.state.plist &&\n                    Object.keys(this.state.plist.val()).map((id) => {\n                      let p = this.state.plist.val();\n                      return (\n                        <option value={id} key={id}>\n                          {p[id][\"project_name\"]}\n                        </option>\n                      );\n                    })}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.i_projectimage}\n                  id=\"i_projectimage\"\n                  placeholder=\"Project Image url \"\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.i_projectimagecaption}\n                  id=\"i_projectimagecaption\"\n                  placeholder=\"Project Image Caption \"\n                  onChange={this.updateState}\n                />\n              </div>\n\n              <button\n                onClick={() =>\n                  this.handleComplete(\n                    this.state.i_projectid,\n                    this.state.i_projectimage,\n                    this.state.i_projectimagecaption\n                  )\n                }\n                className=\"btn btn-primary\"\n              >\n                SUBMIT\n              </button>\n            </div>\n            <div className=\"col-12 mt-5\">\n              <h5>Upload images here</h5>\n\n              {this.state.isUploading && (\n                <div\n                  className=\"progress-bar\"\n                  role=\"progressbar\"\n                  style={{ width: this.state.progress + \"%\" }}\n                  aria-valuenow={this.state.progress}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                >\n                  {this.state.progress}\n                </div>\n              )}\n              {this.state.avatarURL && (\n                <div className=\"uploaded image\">\n                  <label>Image:</label>\n                  <a target=\"_blank\" href={this.state.avatarURL}>\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\n                  </a>\n                </div>\n              )}\n              <FileUploader\n                accept=\"image/*\"\n                name=\"avatar\"\n                randomizeFilename\n                storageRef={fbStorage.ref(\"images\")}\n                onUploadStart={this.handleUploadStart}\n                onUploadError={this.handleUploadError}\n                onUploadSuccess={this.handleUploadSuccess}\n                onProgress={this.handleProgress}\n              />\n            </div>\n\n            <div className=\"col-12 mt-5\">\n              {this.state.i_projectid !== \"empty\" && this.state.i_projectid ? (\n                <React.Fragment>\n                  <h5>Add Multiple Images Here:</h5>\n                  <FileUploader\n                    accept=\"image/*\"\n                    name=\"avatar\"\n                    randomizeFilename\n                    storageRef={fbStorage.ref(\"images\")}\n                    onUploadStart={this.handleUploadStart}\n                    onUploadError={this.handleUploadError}\n                    onUploadSuccess={this.handleMultipleUploadSuccess}\n                    onProgress={this.handleProgress}\n                    multiple\n                  />\n                </React.Fragment>\n              ) : null}\n            </div>\n            <div className=\"col-12 mt-5\">\n              {this.state.photosList\n                ? this.state.photosList.map((val, id) => {\n                    return (\n                      <div className=\"row\" key={id}>\n                        <div\n                          className=\"col-sm-6 my-2\"\n                          style={{\n                            backgroundImage: `url(${val[\"src\"]})`,\n                            backgroundSize: \"cover\",\n                            backgroundPosition: \"center\",\n                            height: \"200px\",\n                          }}\n                        ></div>\n                        <div className=\"col-sm-6 my-2\">\n                          <b>Current Caption:</b> {val[\"caption\"]}\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Image Caption \"\n                            onBlur={(e) =>\n                              this.updateCaption(\n                                id,\n                                e.target.value,\n                                val[\"route\"]\n                              )\n                            }\n                          />\n                        </div>\n                      </div>\n                    );\n                  })\n                : null}\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddProjectImages;\n","import React, { Component } from \"react\";\nimport { db } from '../firebase';\nimport { Link } from \"react-router-dom\";\nimport { FacebookOption, Instagram, Phone } from \"grommet-icons\";\n\n\nclass Sitemap extends Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n          data: ''\n        }\n      };\n\n    componentDidMount = () => {\n        /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\n        const s_ref = db.ref(\"/services\");\n        s_ref.once(\"value\", snapshot => {\n          if (snapshot) {\n            this.setState({ slist: snapshot })\n          }\n        })\n\n\n        const p_ref = db.ref(\"/projects\");\n        p_ref.once(\"value\", snapshot => {\n          if (snapshot) {\n            this.setState({ plist: snapshot })\n          }\n        })\n      }\n\n\n    \n\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"mt-5\">\n                    <div className=\"container\">\n                        <div className=\"row \">\n                            <div className=\"col-12\">\n                                <Link to=\"/\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">THEM STUDIOS</h5></Link>\n                            </div>\n                            <div className=\"col-12 d-flex flex-column\">\n\n                                <Link to=\"/services\" className=\"mt-2\">Services</Link>\n                                <Link to=\"/portfolio\" className=\"mt-2\">Portfolio</Link>\n                                <Link to=\"/portfolio\" className=\"mt-2\">Contact</Link>\n                            </div>\n                            <div className=\"col-12 mt-5\">\n                                <Link to=\"/services\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">SERVICES</h5></Link>\n                            </div>\n                            <div className=\"col-12 d-flex flex-column\">\n                            {this.state.slist &&\n                                Object.keys(this.state.slist.val()).map(id => {\n                                    let s = this.state.slist.val();\n                                return (\n                                    <Link className=\"mt-2\" to={{ pathname: `services/${s[id][\"service_pagename\"]}`, serviceid: `${id}` }}>{s[id][\"service_name\"]}</Link>\n\n\n                                )})\n                                }\n                                \n                            </div>\n                            <div className=\"col-12 mt-5\">\n                                <Link to=\"/portfolio\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">PORTFOLIO</h5></Link>\n                            </div>\n                            <div className=\"col-12 d-flex flex-column\">\n                            {this.state.plist &&\n                                Object.keys(this.state.plist.val()).map(id => {\n                                    let p = this.state.plist.val();\n                                return (\n                                    <Link className=\"mt-2\" to={{ pathname: `projects/${p[id][\"project_pagename\"]}`, projectid: `${id}` }}>{p[id][\"project_name\"]}</Link>\n\n\n                                )})\n                                }\n                                \n                            </div>\n                            \n\n\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\n\nexport default Sitemap;","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n  useEffect(() => {\n    const unlisten = history.listen(() => {\n      window.scrollTo(0, 0);\n    });\n    return () => {\n      unlisten();\n    }\n  }, []);\n\n  return (null);\n}\n\nexport default withRouter(ScrollToTop);","import React, { Component } from \"react\";\nimport { db, fbStorage } from \"../firebase\";\n\nclass PageContent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\",\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n  updateState = (e) => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  componentDidMount = () => {\n    /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\n    this.getContent();\n  };\n\n  getContent = () => {\n    const ref = db.ref(\"/pagecontent\");\n    ref.once(\"value\", (snapshot) => {\n      if (snapshot) {\n        this.setState({ contentlist: snapshot });\n      }\n    });\n  };\n\n  handleComplete = (c_location, c_title, c_description, c_active) => {\n    if (c_location && c_description && c_active !== \"empty\") {\n      const contentid = db.ref(\"/pagecontent\").push();\n      contentid.set(\n        {\n          content_location: c_location,\n          content_title: c_title,\n          content_description: c_description,\n          content_active: c_active,\n          content_pagename: c_title\n            .toString()\n            .toLowerCase()\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\n          content_created_at: Date.now(),\n        },\n        function (error) {\n          if (error) {\n            alert(\"Data could not be saved.\" + error);\n          } else {\n            alert(\"Data saved successfully.\");\n          }\n        }\n      );\n      this.getContent();\n    }\n  };\n\n  handleUpdate = (contentid, c_location, c_title, c_description, c_active) => {\n    if (contentid && c_location && c_description && c_active) {\n      /* Update the changes made to the service */\n\n      db.ref(\"/pagecontent/\" + contentid).update(\n        {\n          content_location: c_location,\n          content_title: c_title,\n          content_description: c_description,\n          content_active: c_active,\n          content_pagename: c_title\n            .toString()\n            .toLowerCase()\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\n          content_created_at: Date.now(),\n        },\n        function (error) {\n          if (error) {\n            alert(\"Data could not be saved.\" + error);\n          } else {\n            alert(\"Data saved successfully.\");\n          }\n        }\n      );\n\n      this.getContent();\n    }\n  };\n\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\n\n  handleProgress = (progress) => this.setState({ progress });\n\n  handleUploadError = (error) => {\n    this.setState({ isUploading: false });\n    alert(error);\n  };\n\n  handleUploadSuccess = (filename) => {\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\n    fbStorage\n      .ref(\"images\")\n      .child(filename)\n      .getDownloadURL()\n      .then((url) => this.setState({ avatarURL: url, p_image: url }));\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container page-content\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h2>Add New Content</h2>\n            </div>\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.c_location}\n                  id=\"c_location\"\n                  placeholder=\"Enter Location Name\"\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.c_title}\n                  id=\"c_title\"\n                  placeholder=\"Enter Title \"\n                  onChange={this.updateState}\n                />\n              </div>\n              <div className=\"form-group\">\n                <textarea\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={this.state.c_description}\n                  id=\"c_description\"\n                  placeholder=\"Enter Description \"\n                  onChange={this.updateState}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <select\n                  className=\"form-control\"\n                  value={this.state.c_active}\n                  id=\"c_active\"\n                  onChange={this.updateState}\n                >\n                  <option value=\"empty\">SELECT STATUS</option>\n                  <option value=\"true\">TRUE</option>\n                  <option value=\"false\">FALSE</option>\n                </select>\n              </div>\n\n              <button\n                onClick={() =>\n                  this.handleComplete(\n                    this.state.c_location,\n                    this.state.c_title,\n                    this.state.c_description,\n                    this.state.c_active\n                  )\n                }\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n\n          <div className=\"\">\n            {this.state.contentlist ? (\n              <div className=\"row mt-4\">\n                <div className=\"col-12\">\n                  <h2>Existing Contents</h2>\n                </div>\n\n                {Object.keys(this.state.contentlist.val()).map((id) => {\n                  let c = this.state.contentlist.val();\n                  return (\n                    <div key={id} className=\"col-md-6 mb-3\">\n                      <div className=\"pagecontent-card\">\n                        {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\n                        <div className=\"form-group\">\n                          <label>{c[id][\"content_location\"]}</label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state[\"c_location_\" + id]}\n                            id={\"c_location_\" + id}\n                            placeholder=\"Enter Location Name\"\n                            onChange={this.updateState}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>{c[id][\"content_title\"]}</label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state[\"c_title_\" + id]}\n                            id={\"c_title_\" + id}\n                            placeholder=\"Enter Title \"\n                            onChange={this.updateState}\n                          />\n                        </div>\n                        <div className=\"form-group\">\n                          <label>{c[id][\"content_description\"]}</label>\n                          <textarea\n                            type=\"text\"\n                            className=\"form-control\"\n                            value={this.state[\"c_description_\" + id]}\n                            id={\"c_description_\" + id}\n                            placeholder=\"Enter Description \"\n                            onChange={this.updateState}\n                          />\n                        </div>\n\n                        <div className=\"form-group\">\n                          <label>{c[id][\"content_active\"]}</label>\n                          <select\n                            className=\"form-control\"\n                            value={this.state[\"c_active_\" + id]}\n                            id={\"c_active_\" + id}\n                            onChange={this.updateState}\n                          >\n                            <option value=\"empty\">SELECT STATUS</option>\n                            <option value=\"true\">TRUE</option>\n                            <option value=\"false\">FALSE</option>\n                          </select>\n                          <button\n                            onClick={() =>\n                              this.handleUpdate(\n                                id,\n                                this.state[\"c_location_\" + id]\n                                  ? this.state[\"c_location_\" + id]\n                                  : c[id][\"content_location\"],\n                                this.state[\"c_title_\" + id]\n                                  ? this.state[\"c_title_\" + id]\n                                  : c[id][\"content_title\"],\n                                this.state[\"c_description_\" + id]\n                                  ? this.state[\"c_description_\" + id]\n                                  : c[id][\"content_description\"],\n                                this.state[\"c_active_\" + id]\n                                  ? this.state[\"c_active_\" + id]\n                                  : c[id][\"content_active\"]\n                              )\n                            }\n                            className=\"btn btn-primary mt-2 \"\n                          >\n                            UPDATE\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PageContent;\n","import {\n  FETCH_USERDETAILS_PENDING,\n  FETCH_USERDETAILS_SUCCESS,\n  FETCH_USERDETAILS_ERROR,\n} from \"../actions\";\n\nconst initialState = {\n  pending: false,\n  userDetails: [],\n  error: null,\n};\n\nexport default function handleuserReducer(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_USERDETAILS_PENDING:\n      return {\n        ...state,\n        pending: true,\n      };\n    case FETCH_USERDETAILS_SUCCESS:\n      return {\n        ...state,\n        pending: false,\n        userDetails: action.userDetails,\n      };\n    case FETCH_USERDETAILS_ERROR:\n      return {\n        ...state,\n        pending: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n}\n\nexport const getUserDetails = (state) => state.userDetails;\nexport const getUserDetailsPending = (state) => state.pending;\nexport const getUserDetailsError = (state) => state.error;\n","import React, { Component } from \"react\";\nimport PageContent from \"../components/pagecontent\";\nimport { Link } from \"react-router-dom\";\n\nclass About extends Component {\n  componentDidMount = () => {\n    document.title = \"THEM STUDIOS | About theM\";\n  };\n\n  render() {\n    return (\n      <div className=\" index-page text-center\">\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n            <div className=\"col-12 col-md-4 mb-2\">\n              <PageContent pagecontentid=\"-MDIt4KlYbfKpBOh36ua\" />\n            </div>\n            <div className=\"col-12 col-md-4 mb-2\">\n              <div className=\"h-100 d-flex flex-row align-items-center\">\n                <img\n                  src=\"https://firebasestorage.googleapis.com/v0/b/bythem-f0fdb.appspot.com/o/images%2Fdbaff600-ba03-4138-9692-1ea93e97578e.webp?alt=media&token=8d63ec35-7025-4b13-9dec-1215a55262bb\"\n                  className=\"img img-fluid align-self-center\"\n                />\n              </div>\n            </div>\n            <div className=\"col-12 col-md-4 mb-2\">\n              <PageContent pagecontentid=\"-MDGRuhFTBixRVFspb4V\" />\n            </div>\n\n            <div className=\"col-12 \">\n              <div className=\"d-flex justify-content-center\">\n                <Link\n                  to=\"/portfolio\"\n                  className=\"btn btn-primary mr-2\"\n                  style={{ width: \"127px\" }}\n                >\n                  View Portfolio\n                </Link>\n                <Link\n                  to=\"/contact\"\n                  className=\"btn btn-primary\"\n                  style={{ width: \"127px\" }}\n                >\n                  Contact\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import {\n  fetchUserDetailsError,\n  fetchUserDetailsPending,\n  fetchUserDetailsSuccess,\n} from \"./../actions/index\";\nimport { db } from \"../../firebase\";\n\nfunction fetchUserDetails(user) {\n  return (dispath) => {\n    dispath(fetchUserDetailsPending());\n    console.log(user);\n    let dref = db.ref(\"/userdetails/\" + user.uid);\n    dref.once(\"value\", (snapshot) => {\n      if (snapshot.val()) {\n        console.log(\"user exists\");\n      } else {\n        console.log(\"create user\");\n      }\n      dispath(fetchUserDetailsSuccess([\"username\", \"uday\"]));\n    });\n  };\n}\n\nexport default fetchUserDetails;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport { bindActionCreators } from \"redux\";\nimport \"./App.css\";\nimport IndexPage from \"./components/index\";\nimport Services from \"./components/services\";\nimport NavBar from \"./components/navbar\";\nimport AddService from \"./components/addservice\";\nimport Footer from \"./components/footer\";\nimport WebImages from \"./components/webimages\";\nimport Service from \"./components/service\";\nimport Login from \"./components/login\";\nimport PrivateRoute from \"./components/privateroute\";\nimport Admin from \"./components/admin\";\nimport AddProject from \"./components/addproject\";\nimport EditService from \"./components/editservice\";\nimport Portfolio from \"./components/portfolio\";\nimport Contact from \"./components/contact\";\nimport EditProject from \"./components/editproject\";\nimport Project from \"./components/project\";\nimport Emails from \"./components/emails\";\nimport EmailDetails from \"./components/emaildetails\";\nimport CreateReviewLinks from \"./components/createReviewLink\";\nimport { fbAuth } from \"./firebase\";\nimport { connect } from \"react-redux\";\nimport { UPDATE_USER, SIGN_OUT } from \"./js/actions/index\";\nimport AddProjectImages from \"./components/addprojectimages\";\nimport Sitemap from \"./components/sitemap\";\nimport ScrollToTop from \"./components/scrolltotop\";\nimport PageContents from \"./components/pagecontents\";\nimport { Home, Mail, Power, User } from \"grommet-icons\";\nimport {\n  getUserDetails,\n  getUserDetailsPending,\n  getUserDetailsError,\n} from \"./js/reducers/handleuserReducer\";\nimport About from \"./components/about\";\nimport fetchUserDetails from \"./js/actioncreators/getUserDetails\";\n\nconst mapStateToProps = (state) => ({\n  userDetailsError: getUserDetailsError(state),\n  userDetails: getUserDetails(state),\n  userDetailsPending: getUserDetailsPending(state),\n  useractivity: state.useractivity,\n});\n\nconst mapDispatchToProps = (dispatch) =>\n  bindActionCreators(\n    {\n      fetchUserDetails: fetchUserDetails,\n      UPDATE_USER: UPDATE_USER,\n      SIGN_OUT: SIGN_OUT,\n    },\n    dispatch\n  );\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      authenticated: false,\n      user: null,\n    };\n  }\n\n  componentDidMount() {\n    fbAuth.onAuthStateChanged((user) => {\n      if (user) {\n        this.props.UPDATE_USER(user);\n      } else {\n        this.setState({\n          authenticated: false,\n          currentUser: null,\n          loading: false,\n        });\n      }\n    });\n  }\n\n  handleSignOut = () => {\n    fbAuth\n      .signOut()\n      .then(() => {\n        this.props.SIGN_OUT();\n      })\n      .catch(function (error) {\n        // An error happened.\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <NavBar />\n        <main className=\" home-content\">\n          <ScrollToTop />\n          <Switch>\n            <Route path=\"/them-login\" component={Login} />\n            <Route path=\"/about-them\" component={About} />\n            <Route path=\"/services/:servicename\" component={Service} />\n            <Route path=\"/project/:projectname\" component={Project} />\n            <Route path=\"services/project/:projectname\" component={Project} />\n            <Route path=\"/portfolio\" component={Portfolio} />\n            <Route path=\"/contact\" component={Contact} />\n            <Route\n              exact\n              path=\"/services\"\n              render={(props) => (\n                <Services {...props} isAuthed={this.state.currentUser} />\n              )}\n            />\n            <Route path=\"/index\" component={IndexPage} />\n            <Route path=\"/sitemap\" component={Sitemap} />\n            <PrivateRoute\n              exact\n              path=\"/addservice\"\n              component={AddService}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/addprojectimages\"\n              component={AddProjectImages}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/addproject\"\n              component={AddProject}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/them-admin\"\n              component={Admin}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/editservice\"\n              component={EditService}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/emails\"\n              component={Emails}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/editproject\"\n              component={EditProject}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/pagecontents\"\n              component={PageContents}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/pagecontents/:contentid\"\n              component={PageContents}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/createreviewlinks\"\n              component={CreateReviewLinks}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <PrivateRoute\n              exact\n              path=\"/email/:email\"\n              component={EmailDetails}\n              authenticated={this.props.useractivity.authenticated}\n            />\n            <Redirect from=\"/\" exact to=\"/index\" component={IndexPage} />\n            <Route path=\"/webimages\" component={WebImages} />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n\n        {this.props.useractivity.authenticated && (\n          <div className=\"container mt-5\">\n            <div className=\"d-flex flex-row\">\n              <div\n                className=\"d-flex flex-column\"\n                style={{\n                  padding: \"25px\",\n                }}\n              >\n                <ul className=\"list-group list-group-horizontal-md\">\n                  <li className=\"list-group-item\">\n                    <Link to=\"/them-admin\" className=\"align-self-center\">\n                      <User className=\"mr-3\" color=\"black\"></User>\n                      {this.props.useractivity.currentUser}\n                    </Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link className=\"align-self-center\" to=\"/them-admin\">\n                      <Home className=\"mr-3\" color=\"black\"></Home>HOME\n                    </Link>\n                  </li>\n                  <li className=\"list-group-item\">\n                    <Link className=\"\" to=\"/emails\">\n                      <Mail className=\"mr-3\" color=\"black\"></Mail>EMAILS\n                    </Link>\n                  </li>\n                  <li className=\"list-group-item bg-danger \">\n                    <a\n                      className=\"text-white\"\n                      onClick={() => this.handleSignOut()}\n                    >\n                      <Power className=\"mr-3\" color=\"white\"></Power>SIGN OUT\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        )}\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { UPDATE_USER, SIGNOUT_USER } from \"../constants\";\n\nconst initialState = {};\n\nexport default function useractivityReducer(state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_USER: {\n      return {\n        ...state,\n        loading: false,\n        authenticated: true,\n        currentUser: action.auth.email,\n      };\n    }\n    case SIGNOUT_USER: {\n      return {\n        ...state,\n        loading: false,\n        authenticated: false,\n        currentUser: null,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport useractivity from \"./useractitvityReducer\";\nimport userdetails from \"./handleuserReducer\";\n\nexport default combineReducers({\n  useractivity,\n  userdetails,\n});\n","export const UPDATE_USER = \"UPDATE_USER\";\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"jquery/dist/jquery\";\nimport \"popper.js/dist/umd/popper\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./css/custom.css\";\nimport store from \"./js/store/index\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}