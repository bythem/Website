{"version":3,"sources":["firebase.js","components/pagecontent.js","components/index.js","components/services.js","components/navbar.js","components/addservice.js","components/footer.js","components/webimages.js","components/portfolio.js","components/service.js","components/login.js","components/privateroute.js","components/admin.js","components/addproject.js","components/addProjectstoService.js","components/editservice.js","components/contact.js","components/editproject.js","components/gallery.js","components/project.js","components/emails.js","components/emaildetails.js","components/createReviewLink.js","components/feedbacks.js","components/feedback.js","js/actions/index.js","components/addprojectimages.js","components/sitemap.js","components/scrolltotop.js","components/pagecontents.js","js/reducers/handleuserReducer.js","components/about.js","js/actioncreators/getUserDetails.js","App.js","js/reducers/useractitvityReducer.js","js/reducers/index.js","js/constants/index.js","js/store/index.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","database","fbStorage","storage","fbAuth","auth","PageContent","props","componentDidMount","getContent","pagecontentid","ref","once","snapshot","val","content_active","setState","data","state","Fragment","this","className","content_title","dangerouslySetInnerHTML","__html","content_description","Component","IndexPage","document","title","Services","slist","Object","keys","map","id","s","imgurl","key","to","pathname","serviceid","style","backgroundImage","connect","NavBar","showHamburgerMenu","status","showNav","src","alt","buttonWidth","isActive","onClick","activeClassName","AddService","handleComplete","s_name","s_description","s_image","serviceID","push","console","log","set","service_name","service_description","service_pagename","toString","toLowerCase","replace","service_created_at","Date","now","service_image","error","alert","window","location","reload","handleUploadStart","isUploading","progress","handleProgress","handleUploadError","handleUploadSuccess","filename","avatar","child","getDownloadURL","then","url","avatarURL","updateState","bind","e","refs","value","type","placeholder","onChange","role","width","aria-valuenow","aria-valuemin","aria-valuemax","target","href","accept","name","randomizeFilename","storageRef","onUploadStart","onUploadError","onUploadSuccess","onProgress","Footer","Phone","color","rel","LinkedinOption","Instagram","WebImages","componentWillMount","temp","tempLocation","listAll","res","items","images","length","path_","imageLocation","deleteImage","imageL","confirm","delete","catch","message","Portfolio","getProjectsByService","serviceProjects","getProjects","orderByChild","plist","forceUpdate","p","projectid","Service","servicename","match","params","getServiceDetailsByPageName","serviceKey","equalTo","path","pieces_","servicedetails","service_projects","Login","handleSubmit","email","password","a","signInWithEmailAndPassword","history","useractivity","authenticated","PrivateRoute","component","rest","render","Admin","AddProject","p_name","p_description","p_service","p_image","p_location","project_name","project_description","project_service","project_image","project_location","project_pagename","project_created_at","active","EditService","serviceId","serviceDetails","shouldComponentUpdate","nextProps","nextState","filterProjects","updateProjects","newProjectsList","selected","projects","indexOf","label","selectedProjects","deleteProject","index","splice","Close","opt","options","isMulti","s_serviceid","update","handleChangeUsername","event","username","serviceSelected","deletService","remove","showallservices","checked","padding","border","float","Contact","contact_first_name","contact_last_name","contact_email","contact_phone","contact_comments","contact_pagename","contact_request_created_at","required","frameBorder","height","allowFullScreen","require","compose","withProps","withStateHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","demoFancyMapStyles","googleMapURL","loadingElement","containerElement","mapElement","center","lat","lng","isOpen","onToggleOpen","defaultZoom","defaultCenter","defaultOptions","styles","mapTypeControl","position","EditProject","p_projectid","p_active","projectSelected","GalleryU","openLightbox","i","viewerIsOpen","bool","modalIsOpen","currentIndex","closeLightbox","validate","j","backgroundPosition","backgroundSize","onClose","views","Gallery","overflow","marginLeft","gutter","marginRight","Image","backgroundColor","boxSizing","margin","paddingBottom","opacity","Trip","projectpagename","projectname","getProjectDetailsByPageName","getImagesByProject","list","photosList","pageName","projectDetails","ilist","prevProps","getTripDetailsByPageName","Emails","cf_ref","cflist","unreadCount","count","getNumberOfDaysAgo","date","date2","date1","diffTime","Math","abs","floor","cf","EmailDetails","cf_id","updateEmailViewedStatus","currentState","updatedState","contact_viewed","htmlFor","readOnly","CreateReviewLink","updateProject","generatedLink","i_projectid","borderRadius","navigator","clipboard","writeText","Feedbacks","flist","getProjectName","customerproject_id","feedback_created_at","Array","Star","feedback_rating","feedback_email","FeedBack","useState","formSubmittedMessage","setFormSubmittedMessage","requiredFieldErrorMessage","setRequiredFieldErrorMessage","formSubmitted","setFormSubmitted","fpId","setFpId","useEffect","feedbackid","FormWithToasts","addToast","useToasts","setEmail","comments","setComments","hoverIndex","setHoverIndex","selectedIndex","setSelectedIndex","maxWidth","boxShadow","aria-describedby","size","onMouseEnter","onMouseLeave","parseInt","feedback_comments","feedback_viewed","appearance","class","autoDismiss","autoDismissTimeout","placement","UPDATE_USER","SIGN_OUT","AddProjectImages","updateCaption","route","image_caption","caption","i_projectimage","i_projectimagecaption","image_projectid","image_projectimage","image_created_at","updateMultipleImagesToProject","handleMultipleUploadSuccess","downloadURL","oldState","filenames","downloadURLs","multiple","onBlur","Sitemap","withRouter","unlisten","listen","scrollTo","contentlist","c_location","c_title","c_description","c_active","content_location","content_pagename","content_created_at","handleUpdate","contentid","c","initialState","pending","userDetails","getUserDetails","getUserDetailsPending","getUserDetailsError","About","fetchUserDetails","user","dispath","uid","App","handleSignOut","signOut","loading","onAuthStateChanged","currentUser","Project","exact","isAuthed","PageContents","CreateReviewLinks","from","User","Home","Mail","Power","userDetailsError","userDetailsPending","dispatch","bindActionCreators","combineReducers","action","userdetails","store","createStore","rootReducer","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7c97591.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nconst config = {\r\n  apiKey: \"AIzaSyAWvWlPb7SDSbPgSVxbLQdDudZhYaGt-cI\",\r\n  authDomain: \"bythem-f0fdb.firebaseapp.com\",\r\n  databaseURL: \"https://bythem-f0fdb.firebaseio.com\",\r\n  projectId: \"bythem-f0fdb\",\r\n  storageBucket: \"bythem-f0fdb.appspot.com\",\r\n  messagingSenderId: \"1016948882454\",\r\n  appId: \"1:1016948882454:web:be72974fb1ed51ed\",\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport const db = firebase.database();\r\nexport const fbStorage = firebase.storage();\r\nexport const fbAuth = firebase.auth();\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\n\r\nclass PageContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n    // this.getServiceDetailsByPageName = this.getServiceDetailsByPageName.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.getContent(this.props.pagecontentid);\r\n  };\r\n\r\n  getContent = (pagecontentid) => {\r\n    let contentref = db.ref(\"/pagecontent/\" + pagecontentid);\r\n    contentref.once(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        if (snapshot.val().content_active === \"true\") {\r\n          this.setState({ data: snapshot.val() });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.state.data ? (\r\n          <>\r\n            <h3 className=\"homepage-about-title mb-4\">\r\n              {this.state.data.content_title}\r\n            </h3>\r\n\r\n            <p\r\n              className=\"text-left\"\r\n              dangerouslySetInnerHTML={{\r\n                __html: this.state.data.content_description,\r\n              }}\r\n            ></p>\r\n          </>\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageContent;\r\n","import React, { Component } from \"react\";\r\nimport PageContent from \"../components/pagecontent\";\r\n\r\nclass IndexPage extends Component {\r\n  componentDidMount = () => {\r\n    document.title =\r\n      \"THEM STUDIOS | Planning | Interior Design | Furniture & Accessory Design | Landscape Design\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" index-page text-center\">\r\n        <div className=\"container\">\r\n          <h1 className=\"quote my-5\">\r\n            Simple is hard - Martin Charles Scorsese\r\n          </h1>\r\n        </div>\r\n        <div className=\"container-fluid homepage-images-div\">\r\n          <div className=\"row\">\r\n            <div className=\"d-none d-md-block col-md-3 \">\r\n              <div className=\"homepage-images-left\"></div>\r\n            </div>\r\n            <div className=\"col-md-6 \">\r\n              <div className=\"homepage-images-center\"></div>\r\n            </div>\r\n            <div className=\"d-none d-md-block col-md-3\">\r\n              <div className=\" homepage-images-right\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mt-5\">\r\n          <PageContent pagecontentid=\"-MDGRuhFTBixRVFspb4V\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexPage;\r\n","import React, { Component } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nclass Services extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"THEM - Services\"; // SET PAGE TITLE\r\n\r\n    // GET ALL SERVICES FROM FIREBASE REAL TIME DATABASE\r\n    const s_ref = db.ref(\"/services\");\r\n    s_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ slist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-4\">\r\n              <h2 className=\"page-title\">SERVICES</h2>\r\n              <h5 className=\"sdetail-description text-justify\">\r\n                At <b>Them</b>, we translate our/your vision into reality. The\r\n                projects of our studios are fulfilled considering your taste and\r\n                our designs with latest designs. We provide you an album of\r\n                visualizations which are both functional and aesthetic. With\r\n                this approach, you receive an everlasting experience of living\r\n                in your space and we receive immense satisfaction.\r\n              </h5>\r\n            </div>\r\n            {this.state.slist\r\n              ? Object.keys(this.state.slist.val()).map((id) => {\r\n                  let s = this.state.slist.val();\r\n                  let imgurl = s[id][\"service_image\"];\r\n                  return (\r\n                    <div key={id} className=\"col-md-6 col-lg-4 mb-4\">\r\n                      <Link\r\n                        className=\"no-text-decoration\"\r\n                        to={{\r\n                          pathname: `services/${s[id][\"service_pagename\"]}`,\r\n                          serviceid: `${id}`,\r\n                        }}\r\n                      >\r\n                        <div className=\"card services-card h-100\">\r\n                          <div\r\n                            className=\"services-image\"\r\n                            style={{ backgroundImage: `url(${imgurl})` }}\r\n                          ></div>\r\n                          <div className=\"card-body\">\r\n                            <h5 className=\"card-title service-title\">\r\n                              {\" \"}\r\n                              {s[id][\"service_name\"]}\r\n                            </h5>\r\n                            <p className=\"card-text service-card-description text-justify\">\r\n                              {\" \"}\r\n                              {s[id][\"service_description\"]}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </Link>\r\n                    </div>\r\n                  );\r\n                })\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Services);\r\n","import React, { Component } from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HamburgerCollapseReverse } from \"react-animated-burgers\";\r\n\r\nclass NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showNav: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {};\r\n  showHamburgerMenu = (status) => {\r\n    this.setState({ showNav: status });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\" navbar navbar-expand-sm navbar-light fixed-top\">\r\n          <div className=\"container\">\r\n            <Link className=\"brand\" to=\"/\">\r\n              <img\r\n                src=\"https://firebasestorage.googleapis.com/v0/b/bythem-f0fdb.appspot.com/o/images%2F3e570b10-e4b8-4fbf-9d96-35b100382cf4.png?alt=media&token=f291a73b-4002-4682-a723-ce8d272e43c2\"\r\n                className=\"logo\"\r\n                alt=\"logo\"\r\n              ></img>\r\n              <h1 className=\"logo-text\">THEM STUDIOS</h1>\r\n            </Link>\r\n\r\n            <HamburgerCollapseReverse\r\n              className=\"navbar-toggler\"\r\n              buttonWidth={25}\r\n              isActive={this.state.showNav}\r\n              onClick={() => this.showHamburgerMenu(!this.state.showNav)}\r\n            />\r\n\r\n            <div\r\n              className={\r\n                this.state.showNav\r\n                  ? \"navbar-collapse collapse show\"\r\n                  : \"navbar-collapse collapse\"\r\n              }\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item \">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.showHamburgerMenu(false)}\r\n                    activeClassName=\"nav-link-selected\"\r\n                    to=\"/index\"\r\n                  >\r\n                    <b>H</b>\r\n                    OME\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item \">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.showHamburgerMenu(false)}\r\n                    activeClassName=\"nav-link-selected\"\r\n                    to=\"/about-them\"\r\n                  >\r\n                    <b>A</b>\r\n                    BOUT\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.showHamburgerMenu(false)}\r\n                    activeClassName=\"nav-link-selected\"\r\n                    to=\"/services\"\r\n                  >\r\n                    <b>S</b>\r\n                    ERVICES\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.showHamburgerMenu(false)}\r\n                    activeClassName=\"nav-link-selected\"\r\n                    to=\"/portfolio\"\r\n                  >\r\n                    <b>P</b>\r\n                    ORTFOLIO\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item \">\r\n                  <NavLink\r\n                    className=\"nav-link\"\r\n                    onClick={() => this.showHamburgerMenu(false)}\r\n                    activeClassName=\"nav-link-selected\"\r\n                    to=\"/contact\"\r\n                  >\r\n                    <b>C</b>\r\n                    ONTACT\r\n                  </NavLink>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {Component}  from \"react\";\r\nimport {db, fbStorage} from '../firebase';\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nclass AddService extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n           data: ''\r\n        }\r\n        this.updateState = this.updateState.bind(this);\r\n     };\r\n     updateState(e) {\r\n        this.setState({s_name: this.refs.s_name.value, s_description: this.refs.s_description.value, s_image: this.refs.s_image.value});\r\n       \r\n     }\r\n\r\n     componentDidMount = () => {\r\n     \r\n     }\r\n\r\n     handleComplete = (s_name,s_description, s_image) => {\r\n         const serviceID = db.ref(\"/services\").push();\r\n        console.log(s_name+s_description+s_image)\r\n         serviceID\r\n         .set(\r\n           {\r\n             service_name: s_name,\r\n             service_description: s_description,\r\n             service_pagename: s_name.toString().toLowerCase().replace(/\\s/g, '-'),\r\n             service_created_at: Date.now(),\r\n             service_image: s_image\r\n           },\r\n           function(error) {\r\n             if (error) {\r\n               alert(\"Data could not be saved.\" + error);\r\n             } else {\r\n               alert(\"Data saved successfully.\");\r\n               window.location.reload();\r\n             }\r\n           }\r\n         )\r\n         \r\n        \r\n      }\r\n\r\n      handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n      handleProgress = progress => this.setState({ progress });\r\n\r\n      handleUploadError = error => {\r\n        this.setState({ isUploading: false });\r\n        alert(error);\r\n      };\r\n\r\n      handleUploadSuccess = filename => {\r\n        this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n        fbStorage.ref(\"images\").child(filename).getDownloadURL().then(url => this.setState({ avatarURL: url, s_image : url }));\r\n      };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n    <React.Fragment>\r\n            <div className=\"container page-content\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2>Add new Service</h2>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"service_name\" placeholder=\"Enter Service Name\" ref=\"s_name\" \r\n                            onChange={this.updateState.bind(this)} />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea type=\"text\" className=\"form-control\" id=\"service_description\" placeholder=\"Describe the Service\"  ref=\"s_description\" \r\n                            onChange={this.updateState.bind(this)}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"service_image\" placeholder=\"paste the URL here\"  ref=\"s_image\"\r\n                             onChange={this.updateState.bind(this)}\r\n                            />\r\n                        </div>\r\n                       \r\n                        \r\n                        <button onClick={() => this.handleComplete(this.state.s_name,this.state.s_description,this.state.s_image)} className=\"btn btn-primary\">Submit</button>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-12 mt-5\">\r\n                      <h5>Upload images here</h5>\r\n\r\n                        {this.state.isUploading &&\r\n                          <div className=\"progress-bar\" role=\"progressbar\" style={{ width: this.state.progress + '%' }} aria-valuenow={this.state.progress} aria-valuemin=\"0\" aria-valuemax=\"100\">{this.state.progress}</div>\r\n                        }\r\n                        {this.state.avatarURL && \r\n                        <div className=\"uploaded image\">\r\n                          <label>Image:</label>\r\n                          <a target=\"_blank\" href={this.state.avatarURL}><img className=\"img img-fluid\" src={this.state.avatarURL} /></a>\r\n                        </div>\r\n                        }\r\n                        <FileUploader\r\n                          accept=\"image/*\"\r\n                          name=\"avatar\"\r\n                          randomizeFilename\r\n                          storageRef={fbStorage.ref(\"images\")}\r\n                          onUploadStart={this.handleUploadStart}\r\n                          onUploadError={this.handleUploadError}\r\n                          onUploadSuccess={this.handleUploadSuccess}\r\n                          onProgress={this.handleProgress}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AddService;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkedinOption, Instagram, Phone } from \"grommet-icons\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"footer mt-5\">\r\n        <div className=\"container\">\r\n          <div className=\"row \">\r\n            <div className=\"col-6\">\r\n              <Link to=\"\" className=\"no-text-decoration footer-text\">\r\n                {\" \"}\r\n                THEM STUDIOS\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-6 text-right\">\r\n              <a href=\"tel:+917702277247\">\r\n                <Phone className=\"social-icon\" color=\"white\"></Phone>\r\n              </a>\r\n              <a\r\n                href=\"https://www.linkedin.com/company/them-studios\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <LinkedinOption\r\n                  className=\"social-icon mx-3\"\r\n                  color=\"white\"\r\n                ></LinkedinOption>\r\n              </a>\r\n              <a\r\n                href=\"https://www.instagram.com/bythem.studio/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <Instagram className=\"social-icon\" color=\"white\"></Instagram>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, {Component}  from \"react\";\r\nimport { fbStorage} from '../firebase';\r\n\r\nclass WebImages extends Component {\r\n  \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n           images: ''\r\n        }\r\n        this.updateState = this.updateState.bind(this);\r\n     };\r\n     updateState(e) {\r\n        this.setState({s_name: this.refs.s_name.value, s_description: this.refs.s_description.value});\r\n     }\r\n\r\n    componentWillMount = () => {\r\n        let temp = [];\r\n        let tempLocation = [];\r\n        fbStorage.ref(\"images\").listAll().then((res) => {\r\n            res.items.map((images) => {\r\n                images.getDownloadURL().then(url => {\r\n                   tempLocation[tempLocation.length] = images.location.path_;\r\n                   temp[temp.length] = url;\r\n                   this.setState({images: temp});\r\n                   this.setState({imageLocation: tempLocation});\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteImage = (key) =>{\r\n        let imageL =  this.state.imageLocation;\r\n        if (window.confirm('Are you sure you want to delete?')) \r\n        {\r\n            fbStorage.ref().child(imageL[key]).delete().then(function() {\r\n                // File deleted successfully\r\n                alert(\"successfully deleted !!\")\r\n                window.location.reload();\r\n              }).catch(function(error) {\r\n                // Uh-oh, an error occurred!\r\n                alert(error.message)\r\n              });\r\n        }\r\n    }\r\n\r\n    \r\n\r\n  render() {\r\n    return (\r\n    <React.Fragment>\r\n            <div className=\"container page-content\">\r\n                <div className=\"row images-div\">\r\n                   \r\n                   {this.state.images && this.state.images.map((url,key) => {\r\n                       return(\r\n                           <div className=\"col-6\">\r\n                              <a href={url} target=\"_blank\"> <img src={url} className=\"img img-fluid\"/></a>\r\n                              <button className=\"btn btn-danger mt-2\" onClick={() => {this.deleteImage(key)}}>DELETE</button>\r\n                           </div>\r\n                       )\r\n                   }\r\n                     )}\r\n                        \r\n                </div>\r\n            </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default WebImages;","import React, { Component } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Portfolio extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"THEM - Portfolio\"; // SET PAGE TITLE\r\n    // GET ALL PROJECTS FROM FIREBASE REAL TIME DATABASE\r\n\r\n    if (!this.props.title) {\r\n      this.getProjects();\r\n    } else {\r\n      this.getProjectsByService(this.props.serviceProjects);\r\n    }\r\n  };\r\n\r\n  getProjects = () => {\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.orderByChild(\"active\").once(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        this.setState({ plist: snapshot.val() });\r\n        this.forceUpdate();\r\n      }\r\n    });\r\n  };\r\n\r\n  // shouldComponentUpdate = (nextProps, nextState) => {\r\n  //   if (this.props.serviceKey !== nextProps.serviceKey) {\r\n  //     this.getProjectsByService(this.props.serviceProjects);\r\n  //     this.forceUpdate();\r\n  //     return true;\r\n  //   }\r\n  //   return false;\r\n  // };\r\n\r\n  getProjectsByService = (serviceProjects) => {\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.orderByChild(\"active\").once(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        this.setState({\r\n          plist: snapshot.val(),\r\n          serviceProjects: serviceProjects,\r\n        });\r\n        this.forceUpdate();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content container\">\r\n          <div className=\"row\">\r\n            {this.state.plist ? (\r\n              <>\r\n                <div className=\"col-12 mb-4\">\r\n                  {this.props.title ? (\r\n                    <h3 className=\"page-title mt-4\">{this.props.title}</h3>\r\n                  ) : (\r\n                    <h2 className=\"page-title\">PORTFOLIO</h2>\r\n                  )}\r\n                </div>\r\n\r\n                {this.state.serviceProjects && this.state.plist\r\n                  ? this.state.serviceProjects.map((id) => {\r\n                      let p = this.state.plist;\r\n                      return (\r\n                        <div key={id} className=\"col-md-6 col-lg-4 mb-3\">\r\n                          <Link\r\n                            className=\"no-text-decoration\"\r\n                            to={{\r\n                              pathname: `/project/${p[id][\"project_pagename\"]}`,\r\n                              projectid: `${id}`,\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className=\"portfolio-project-card\"\r\n                              style={{\r\n                                backgroundImage: `url(${p[id][\"project_image\"]})`,\r\n                              }}\r\n                            >\r\n                              {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\r\n                              <div className=\"portfolio-project-short-description\">\r\n                                <div className=\"project-border-top\"></div>\r\n                                <div className=\"description text-center\">\r\n                                  <h5 className=\"description-title mb-0\">\r\n                                    {\" \"}\r\n                                    {p[id][\"project_name\"]}\r\n                                  </h5>\r\n                                  <small className=\"description-text\">\r\n                                    {\" \"}\r\n                                    {p[id][\"project_location\"]}\r\n                                  </small>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })\r\n                  : Object.keys(this.state.plist).map((id) => {\r\n                      let p = this.state.plist;\r\n                      return (\r\n                        <div key={id} className=\"col-md-6 col-lg-4 mb-3\">\r\n                          <Link\r\n                            className=\"no-text-decoration\"\r\n                            to={{\r\n                              pathname: `/project/${p[id][\"project_pagename\"]}`,\r\n                              projectid: `${id}`,\r\n                            }}\r\n                          >\r\n                            <div\r\n                              className=\"portfolio-project-card\"\r\n                              style={{\r\n                                backgroundImage: `url(${p[id][\"project_image\"]})`,\r\n                              }}\r\n                            >\r\n                              {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\r\n                              <div className=\"portfolio-project-short-description\">\r\n                                <div className=\"project-border-top\"></div>\r\n                                <div className=\"description text-center\">\r\n                                  <h5 className=\"description-title mb-0\">\r\n                                    {\" \"}\r\n                                    {p[id][\"project_name\"]}\r\n                                  </h5>\r\n                                  <small className=\"description-text\">\r\n                                    {\" \"}\r\n                                    {p[id][\"project_location\"]}\r\n                                  </small>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    })}\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portfolio;\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport Portfolio from \"./portfolio\";\r\n\r\nclass Service extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      images: \"\",\r\n    };\r\n    // this.getServiceDetailsByPageName = this.getServiceDetailsByPageName.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let servicename = this.props.match.params.servicename;\r\n    this.getServiceDetailsByPageName(servicename);\r\n  };\r\n\r\n  getServiceDetailsByPageName = (servicename) => {\r\n    let serviceKey = \"\";\r\n    let serviceRef = db.ref(\"/services\");\r\n    serviceRef\r\n      .orderByChild(\"service_pagename\")\r\n      .equalTo(servicename)\r\n      .once(\"child_added\", (snapshot) => {\r\n        document.title = snapshot.val()[\"service_name\"];\r\n        serviceKey = snapshot.ref.path.pieces_[1];\r\n        this.setState({\r\n          servicedetails: snapshot.val(),\r\n          serviceKey: serviceKey,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          {this.state.servicedetails ? (\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mb-3\">\r\n                <h2 className=\"sdetail-title\">\r\n                  {this.state.servicedetails[\"service_name\"]}\r\n                </h2>\r\n              </div>\r\n\r\n              <div className=\"col-12 text-justify\">\r\n                <h5 className=\"sdetail-description\">\r\n                  {this.state.servicedetails[\"service_description\"]}\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n\r\n        {this.state.servicedetails ? (\r\n          this.state.servicedetails.service_projects ? (\r\n            <Portfolio\r\n              title=\"Related Projects\"\r\n              serviceKey={this.state.serviceKey}\r\n              serviceProjects={this.state.servicedetails.service_projects}\r\n            />\r\n          ) : null\r\n        ) : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Service;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { fbAuth } from \"../firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  updateState(e) {\r\n    this.setState({\r\n      email: this.refs.email.value,\r\n      password: this.refs.password.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = async (email, password) => {\r\n    fbAuth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.props.history.push(\"/\");\r\n      })\r\n      .catch(function (error) {\r\n        // Handle Errors here.\r\n        alert(\"Unable to sign in \" + error.message);\r\n        // ...\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.useractivity.authenticated) {\r\n      return <Redirect to=\"/them-admin\" />;\r\n    } else {\r\n      return (\r\n        <React.Fragment>\r\n          <div className=\"container page-content\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <h2>Please login</h2>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"user_name\"\r\n                    placeholder=\"User Name\"\r\n                    ref=\"email\"\r\n                    onChange={this.updateState.bind(this)}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    id=\"user_password\"\r\n                    placeholder=\"Password\"\r\n                    ref=\"password\"\r\n                    onChange={this.updateState.bind(this)}\r\n                  />\r\n                </div>\r\n\r\n                <button\r\n                  onClick={() =>\r\n                    this.handleSubmit(this.state.email, this.state.password)\r\n                  }\r\n                  className=\"btn btn-primary\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({\r\n  component: Component,\r\n  authenticated,\r\n  ...rest\r\n}) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        authenticated === true ? (\r\n          <Component {...props} {...rest} />\r\n        ) : (\r\n          <Redirect to=\"/them-login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Admin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/addservice\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Add New Service{\" \"}\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      Add new service, and image url in the form is the cover\r\n                      image that is shown on the services page{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/editservice\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Edit / Delete Service{\" \"}\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      You can edit or delete a particular service.{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/addproject\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Add New Project{\" \"}\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      Add new project to Portfolio. Select type of service\r\n                      dropdown so that will automatically displayed in services\r\n                      page.{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/editproject\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Edit / Delete Project{\" \"}\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      You can edit or delete a particular project.{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/addprojectimages\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Add Project Images{\" \"}\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      Add Images to a particular project.{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/webimages\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\"> Web Images </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      {\" \"}\r\n                      View all the images on the website{\" \"}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/createreviewlinks\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\">\r\n                      {\" \"}\r\n                      Create Review Links\r\n                    </h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      Generate review links to send to Client\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 mb-3\">\r\n              <Link className=\"no-text-decoration\" to=\"/pagecontents\">\r\n                <div className=\"card services-card h-100\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title service-title\"> Page Contents</h5>\r\n                    <p className=\"card-text service-card-description text-justify\">\r\n                      Create or edit page content based on location\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Admin;\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nclass AddProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  componentDidMount = () => {\r\n    /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\r\n    const s_ref = db.ref(\"/services\");\r\n    s_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ slist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleComplete = (p_name, p_description, p_service, p_image, p_location) => {\r\n    const projectID = db.ref(\"/projects\").push();\r\n    projectID.set(\r\n      {\r\n        project_name: p_name,\r\n        project_description: p_description,\r\n        project_service: p_service,\r\n        project_image: p_image,\r\n        project_location: p_location,\r\n        project_pagename: p_name.toString().toLowerCase().replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\r\n        project_created_at: Date.now(),\r\n        active: true,\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        } else {\r\n          alert(\"Data saved successfully.\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n  handleProgress = (progress) => this.setState({ progress });\r\n\r\n  handleUploadError = (error) => {\r\n    this.setState({ isUploading: false });\r\n    alert(error);\r\n  };\r\n\r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then((url) => this.setState({ avatarURL: url, p_image: url }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2>Add New Project</h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.p_name}\r\n                  id=\"p_name\"\r\n                  placeholder=\"Enter Project Name\"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.p_location}\r\n                  id=\"p_location\"\r\n                  placeholder=\"Project Location \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.p_description}\r\n                  id=\"p_description\"\r\n                  placeholder=\"Describe the Project\"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.p_image}\r\n                  id=\"p_image\"\r\n                  placeholder=\"Project Cover Image url \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={this.state.p_service}\r\n                  id=\"p_service\"\r\n                  onChange={this.updateState}\r\n                >\r\n                  <option value=\"empty\">SELECT A SERVICE</option>\r\n                  {this.state.slist &&\r\n                    Object.keys(this.state.slist.val()).map((id) => {\r\n                      let s = this.state.slist.val();\r\n                      return (\r\n                        <option value={id} key={id}>\r\n                          {s[id][\"service_name\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() =>\r\n                  this.handleComplete(\r\n                    this.state.p_name,\r\n                    this.state.p_description,\r\n                    this.state.p_service,\r\n                    this.state.p_image,\r\n                    this.state.p_location\r\n                  )\r\n                }\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12 mt-5\">\r\n              <h5>Upload images here</h5>\r\n\r\n              {this.state.isUploading && (\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{ width: this.state.progress + \"%\" }}\r\n                  aria-valuenow={this.state.progress}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {this.state.progress}\r\n                </div>\r\n              )}\r\n              {this.state.avatarURL && (\r\n                <div className=\"uploaded image\">\r\n                  <label>Image:</label>\r\n                  <a target=\"_blank\" href={this.state.avatarURL}>\r\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\r\n                  </a>\r\n                </div>\r\n              )}\r\n              <FileUploader\r\n                accept=\"image/*\"\r\n                name=\"avatar\"\r\n                randomizeFilename\r\n                storageRef={fbStorage.ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleProgress}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProject;\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport Select from \"react-select\";\r\nimport { Close } from \"grommet-icons\";\r\n\r\nclass EditService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let serviceId = this.props.serviceId;\r\n    this.setState({\r\n      serviceDetails: this.props.serviceDetails,\r\n    });\r\n  };\r\n\r\n  shouldComponentUpdate = (nextProps, nextState) => {\r\n    if (this.props.serviceDetails !== nextProps.serviceDetails) {\r\n      this.filterProjects(nextProps.serviceDetails, nextProps.serviceId);\r\n      return true;\r\n    }\r\n    return false;\r\n  };\r\n\r\n  updateProjects = () => {\r\n    let newProjectsList = [];\r\n    if (this.state.selected.length > 0) {\r\n      this.state.selected.map((res) => {\r\n        return newProjectsList.push(res.value);\r\n      });\r\n    }\r\n    this.state.newProjectsList.map((res) => {\r\n      return newProjectsList.push(res.value);\r\n    });\r\n\r\n    if (newProjectsList.length > 0) {\r\n      db.ref(\"/services/\" + this.state.serviceId)\r\n        .child(\"service_projects\")\r\n        .set(newProjectsList);\r\n      db.ref(\"/services/\" + this.state.serviceId).once(\"value\", (snapshot) => {\r\n        if (snapshot.val()) {\r\n          this.filterProjects(snapshot.val(), this.state.serviceId);\r\n        }\r\n      });\r\n    }\r\n    this.setState({ newProjectsList: null });\r\n  };\r\n\r\n  filterProjects = (serviceDetails, serviceId) => {\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        let projects = [],\r\n          selected = [];\r\n        Object.keys(snapshot.val()).map((id) => {\r\n          if (serviceDetails.service_projects) {\r\n            serviceDetails.service_projects.indexOf(id) >= 0\r\n              ? selected.push({\r\n                  label: snapshot.val()[id][\"project_name\"],\r\n                  value: id,\r\n                })\r\n              : projects.push({\r\n                  label: snapshot.val()[id][\"project_name\"],\r\n                  value: id,\r\n                });\r\n          } else {\r\n            projects.push({\r\n              label: snapshot.val()[id][\"project_name\"],\r\n              value: id,\r\n            });\r\n          }\r\n        });\r\n        this.setState({\r\n          projects: projects,\r\n          selected: selected,\r\n          selectedProjects: serviceDetails.service_projects,\r\n          serviceId: serviceId,\r\n        });\r\n        this.forceUpdate();\r\n      }\r\n    });\r\n  };\r\n\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  deleteProject = (projectid) => {\r\n    let selected = this.state.selectedProjects;\r\n    let serviceId = this.state.serviceId;\r\n    let index = selected.indexOf(projectid);\r\n    if (selected.indexOf(projectid) >= 0) {\r\n      selected.splice(index, 1);\r\n      db.ref(\"/services/\" + this.state.serviceId)\r\n        .child(\"service_projects\")\r\n        .set(selected);\r\n\r\n      db.ref(\"/services/\" + serviceId).once(\"value\", (snapshot) => {\r\n        if (snapshot.val()) {\r\n          this.filterProjects(snapshot.val(), serviceId);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-3\">\r\n              <h2>Add Projects to Service</h2>\r\n\r\n              {this.state.selected ? (\r\n                <div className=\"d-flex flex-row mb-3\">\r\n                  <p className=\"mr-2\">Selected Projects:</p>\r\n                  {this.state.selected.map((res, id) => {\r\n                    return (\r\n                      <div key={id} className=\"mx-2\">\r\n                        <span\r\n                          className=\"badge badge-pill badge-dark badge-tags\"\r\n                          onClick={() => {\r\n                            this.deleteProject(res.value);\r\n                          }}\r\n                        >\r\n                          {res.label}\r\n                          <Close\r\n                            className=\"social-icon ml-2\"\r\n                            color=\"white\"\r\n                          ></Close>\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : null}\r\n\r\n              <Select\r\n                onChange={(opt) => {\r\n                  this.setState({ newProjectsList: opt });\r\n                }}\r\n                options={this.state.projects}\r\n                isMulti\r\n              ></Select>\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n              <button\r\n                onClick={() => this.updateProjects()}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Add Projects\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditService;\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport Add from \"../components/addProjectstoService\";\r\n\r\nclass EditService extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    /* Bind service to the dropdown*/\r\n    const s_ref = db.ref(\"/services\");\r\n    s_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ slist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleComplete = (s_name, s_description, s_image, s_serviceid) => {\r\n    /* Update the changes made to the service */\r\n\r\n    db.ref(\"/services/\" + s_serviceid).update(\r\n      {\r\n        service_name: s_name,\r\n        service_description: s_description,\r\n        service_pagename: s_name.toString().toLowerCase().replace(\" \", \"-\"),\r\n        service_created_at: Date.now(),\r\n        service_image: s_image,\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        } else {\r\n          alert(\"Data saved successfully.\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleChangeUsername = (event) =>\r\n    this.setState({ username: event.target.value });\r\n\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n  handleProgress = (progress) => this.setState({ progress });\r\n\r\n  handleUploadError = (error) => {\r\n    this.setState({ isUploading: false });\r\n    console.error(error);\r\n  };\r\n\r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then((url) => this.setState({ avatarURL: url }));\r\n  };\r\n\r\n  serviceSelected = (e) => {\r\n    if (e.target.value !== \"empty\") {\r\n      this.setState({ s_serviceid: e.target.value });\r\n      const s_ref = db.ref(\"/services/\" + e.target.value);\r\n      s_ref.once(\"value\", (snapshot) => {\r\n        if (snapshot) {\r\n          this.setState({\r\n            s_name: snapshot.val()[\"service_name\"],\r\n            s_description: snapshot.val()[\"service_description\"],\r\n            s_image: snapshot.val()[\"service_image\"],\r\n            serviceDetails: snapshot.val(),\r\n            serviceProjects: snapshot.val()[\"service_projects\"],\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  deletService = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      db.ref(\"/services/\")\r\n        .child(id)\r\n        .remove()\r\n        .then(function () {\r\n          // File deleted successfully\r\n          alert(\"successfully deleted !!\");\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // Uh-oh, an error occurred!\r\n          alert(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  showallservices = (e) => {\r\n    this.setState({ showallservices: e.target.checked });\r\n  };\r\n\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2>Edit Service</h2>\r\n            </div>\r\n\r\n            <div className=\"col-12 my-5\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"s_serviceid\"\r\n                  onChange={this.serviceSelected}\r\n                  value={this.state.s_serviceid || \"\"}\r\n                >\r\n                  <option value=\"empty\">SELECT A SERVICE</option>\r\n                  {this.state.slist &&\r\n                    Object.keys(this.state.slist.val()).map((id) => {\r\n                      let s = this.state.slist.val();\r\n                      return (\r\n                        <option key={id} value={id}>\r\n                          {s[id][\"service_name\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"s_name\"\r\n                  placeholder=\"Enter Service Name\"\r\n                  value={this.state.s_name}\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"s_description\"\r\n                  placeholder=\"Describe the Service\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.s_description}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"s_image\"\r\n                  placeholder=\"paste the URL here\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.s_image}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                onClick={() =>\r\n                  this.handleComplete(\r\n                    this.state.s_name,\r\n                    this.state.s_description,\r\n                    this.state.s_image,\r\n                    this.state.s_serviceid\r\n                  )\r\n                }\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Update Service\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-5\">\r\n              <h5>Upload images here</h5>\r\n\r\n              {this.state.isUploading && (\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{ width: this.state.progress + \"%\" }}\r\n                  aria-valuenow={this.state.progress}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {this.state.progress}\r\n                </div>\r\n              )}\r\n              {this.state.avatarURL && (\r\n                <div className=\"uploaded image\">\r\n                  <label>Image:</label>\r\n                  <a target=\"_blank\" href={this.state.avatarURL}>\r\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\r\n                  </a>\r\n                </div>\r\n              )}\r\n              <FileUploader\r\n                accept=\"image/*\"\r\n                name=\"avatar\"\r\n                randomizeFilename\r\n                storageRef={fbStorage.ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleProgress}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-4\">\r\n              {this.state.s_serviceid ? (\r\n                <>\r\n                  <hr />\r\n                  <Add\r\n                    serviceId={this.state.s_serviceid}\r\n                    serviceDetails={this.state.serviceDetails}\r\n                    serviceProjects={this.state.serviceProjects}\r\n                  />\r\n                </>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-5\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={this.showallservices}\r\n                checked={this.state.showallservices}\r\n              />{\" \"}\r\n              SHOW ALL SERVICES\r\n              <br />\r\n              <div className=\"row\">\r\n                {this.state.showallservices &&\r\n                  Object.keys(this.state.slist.val()).map((id) => {\r\n                    let s = this.state.slist.val();\r\n                    return (\r\n                      <div\r\n                        className=\"col-12 mb-3\"\r\n                        style={{ padding: \"10px\", border: \"1px solid black\" }}\r\n                      >\r\n                        <span className=\"tex-left\">\r\n                          {s[id][\"service_name\"]}\r\n                        </span>\r\n                        <span style={{ float: \"right\" }}>\r\n                          <button\r\n                            onClick={() => this.deletService(id)}\r\n                            className=\"btn btn-danger\"\r\n                          >\r\n                            Delete Service\r\n                          </button>\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditService;\r\n","import React, { Component } from \"react\";\r\nimport { db } from \"../firebase\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"THEM STUDIOS | Contact THEM\";\r\n  };\r\n\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  handleComplete = (\r\n    contact_first_name,\r\n    contact_last_name,\r\n    contact_email,\r\n    contact_phone,\r\n    contact_comments\r\n  ) => {\r\n    if (\r\n      contact_first_name &&\r\n      contact_last_name &&\r\n      contact_email &&\r\n      contact_phone &&\r\n      contact_comments\r\n    ) {\r\n      const projectID = db.ref(\"/contactrequests\").push();\r\n      projectID.set(\r\n        {\r\n          contact_first_name: contact_first_name,\r\n          contact_last_name: contact_last_name,\r\n          contact_email: contact_email,\r\n          contact_phone: contact_phone,\r\n          contact_comments: contact_comments,\r\n          contact_pagename: contact_first_name\r\n            .toString()\r\n            .toLowerCase()\r\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\r\n          contact_request_created_at: Date.now(),\r\n        },\r\n        function (error) {\r\n          if (error) {\r\n            alert(\r\n              \"Sorry for the trouble. Could not submit form please try later.\" +\r\n                error\r\n            );\r\n          } else {\r\n            alert(\"Request submitted successfully!!\");\r\n            window.location.reload();\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 mb-4\">\r\n              <h2 className=\"page-title\">CONTACT</h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <p className=\"mb-4\">\r\n                We would love to hear from you! Whether your project is big or\r\n                small, professional design advice will ensure you'll love your\r\n                space for years to come.\r\n              </p>\r\n              <p>\r\n                <b>THEM STUDIOS</b>\r\n                <br />\r\n                <a href=\"Tel: +917702277247\">Tel: +917702277247</a>\r\n                <br />\r\n                <a href=\"mailto:maneesh@bythem.studio?subject=THEM ENQUIRY\">\r\n                  maneesh@bythem.studio\r\n                </a>\r\n              </p>\r\n            </div>\r\n            <div className=\"col-12 mt-3\">\r\n              <h4 className=\"mb-2\">How Can We Contact You?</h4>\r\n\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6 mb-2\">\r\n                  <input\r\n                    name=\"first name\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"contact_first_name\"\r\n                    placeholder=\"First Name\"\r\n                    value={this.state.contact_first_name}\r\n                    onChange={this.updateState}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-2\">\r\n                  <input\r\n                    name=\"last name\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"contact_last_name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={this.state.contact_last_name}\r\n                    onChange={this.updateState}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-2\">\r\n                  <input\r\n                    name=\"email\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"contact_email\"\r\n                    placeholder=\"Email Address\"\r\n                    value={this.state.contact_email}\r\n                    onChange={this.updateState}\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6 mb-2\">\r\n                  <input\r\n                    name=\"number\"\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"contact_phone\"\r\n                    placeholder=\"Phone Number\"\r\n                    value={this.state.contact_phone}\r\n                    onChange={this.updateState}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <h4 className=\"mt-3 mb-2\">How Can We Help You?</h4>\r\n              <div className=\"row\">\r\n                <div className=\"col-12 mb-2\">\r\n                  <div className=\"form-group\">\r\n                    <textarea\r\n                      name=\"additional information\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={this.state.contact_comments}\r\n                      id=\"contact_comments\"\r\n                      placeholder=\"Additional information\"\r\n                      onChange={this.updateState}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 mb-3 text-center\">\r\n                  <button\r\n                    onClick={() =>\r\n                      this.handleComplete(\r\n                        this.state.contact_first_name,\r\n                        this.state.contact_last_name,\r\n                        this.state.contact_email,\r\n                        this.state.contact_phone,\r\n                        this.state.contact_comments\r\n                      )\r\n                    }\r\n                    className=\"btn btn-primary\"\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n              <iframe\r\n                src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d952.0081888958348!2d78.54784052923138!3d17.362156779256775!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3bcb996b74434023%3A0x189bf477cc2594c5!2s11-13-981%2Croad%20no.1b%2C%20Rd%20Number%202%2C%20Green%20Hills%20Colony%2C%20Haripuri%20Colony%2C%20Vasavi%20Colony%2C%20L.%20B.%20Nagar%2C%20Hyderabad%2C%20Telangana%20500035%2C%20India!5e0!3m2!1sen!2sus!4v1569088708641!5m2!1sen!2sus\"\r\n                frameBorder=\"0\"\r\n                style={{ width: \"100%\", height: \"400px\" }}\r\n                allowFullScreen={false}\r\n              ></iframe>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst { compose, withProps, withStateHandlers } = require(\"recompose\");\r\nconst {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n} = require(\"react-google-maps\");\r\nconst demoFancyMapStyles = require(\"./googlemapstyle.json\");\r\n\r\nconst Googlemap = compose(\r\n  withProps({\r\n    googleMapURL:\r\n      \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCy7GTXR3u5zjyD3wFPbN7YAMlIs3t82Gk&v=3.exp&libraries=geometry,drawing,places\",\r\n    loadingElement: <div style={{ height: `100%` }} />,\r\n    containerElement: <div style={{ height: `400px` }} />,\r\n    mapElement: <div style={{ height: `100%` }} />,\r\n    center: { lat: 25.03, lng: 121.6 },\r\n  }),\r\n  withStateHandlers(\r\n    () => ({\r\n      isOpen: false,\r\n    }),\r\n    {\r\n      onToggleOpen: ({ isOpen }) => () => ({\r\n        isOpen: !isOpen,\r\n      }),\r\n    }\r\n  ),\r\n  withScriptjs,\r\n  withGoogleMap\r\n)((props) => (\r\n  <GoogleMap\r\n    defaultZoom={19}\r\n    defaultCenter={{ lat: 17.362209, lng: 78.548439 }}\r\n    defaultOptions={{ styles: demoFancyMapStyles, mapTypeControl: false }}\r\n  >\r\n    <Marker position={{ lat: 17.362209, lng: 78.548439 }} />\r\n  </GoogleMap>\r\n));\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\n\r\nclass EditProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    /* Bind service to the dropdown*/\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ plist: snapshot });\r\n      }\r\n    });\r\n\r\n    const s_ref = db.ref(\"/services\");\r\n    s_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ slist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleComplete = (\r\n    p_name,\r\n    p_description,\r\n    p_image,\r\n    p_projectid,\r\n    p_service,\r\n    p_location,\r\n    p_active\r\n  ) => {\r\n    /* Update the changes made to the service */\r\n    db.ref(\"/projects/\" + p_projectid).update(\r\n      {\r\n        project_name: p_name,\r\n        project_description: p_description,\r\n        project_service: p_service,\r\n        project_image: p_image,\r\n        project_location: p_location,\r\n        project_pagename: p_name.toString().toLowerCase().replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\r\n        project_created_at: Date.now(),\r\n        active: p_active,\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        } else {\r\n          alert(\"Data saved successfully.\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleChangeUsername = (event) =>\r\n    this.setState({ username: event.target.value });\r\n\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n  handleProgress = (progress) => this.setState({ progress });\r\n\r\n  handleUploadError = (error) => {\r\n    this.setState({ isUploading: false });\r\n    console.error(error);\r\n  };\r\n\r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then((url) => this.setState({ avatarURL: url }));\r\n  };\r\n\r\n  projectSelected = (e) => {\r\n    if (e.target.value !== \"empty\") {\r\n      this.setState({ p_projectid: e.target.value });\r\n      const s_ref = db.ref(\"/projects/\" + e.target.value);\r\n      s_ref.once(\"value\", (snapshot) => {\r\n        if (snapshot) {\r\n          this.setState({\r\n            p_name: snapshot.val()[\"project_name\"],\r\n            p_description: snapshot.val()[\"project_description\"],\r\n            p_image: snapshot.val()[\"project_image\"],\r\n            p_location: snapshot.val()[\"project_location\"],\r\n            p_service: snapshot.val()[\"project_service\"],\r\n            p_active: snapshot.val()[\"active\"],\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  deleteProject = (id) => {\r\n    if (window.confirm(\"Are you sure you want to delete?\")) {\r\n      db.ref(\"/projects/\")\r\n        .child(id)\r\n        .remove()\r\n        .then(function () {\r\n          // File deleted successfully\r\n          alert(\"successfully deleted !!\");\r\n          window.location.reload();\r\n        })\r\n        .catch(function (error) {\r\n          // Uh-oh, an error occurred!\r\n          alert(error.message);\r\n        });\r\n    }\r\n  };\r\n\r\n  showallservices = (e) => {\r\n    this.setState({ showallservices: e.target.checked });\r\n  };\r\n\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2>Edit Project</h2>\r\n            </div>\r\n\r\n            <div className=\"col-12 my-5\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"p_projectid\"\r\n                  onChange={this.projectSelected}\r\n                  value={this.state.p_projectid}\r\n                >\r\n                  <option value=\"empty\">SELECT A PROJECT</option>\r\n                  {this.state.plist &&\r\n                    Object.keys(this.state.plist.val()).map((id) => {\r\n                      let p = this.state.plist.val();\r\n                      return (\r\n                        <option key={id} value={id}>\r\n                          {p[id][\"project_name\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"p_name\"\r\n                  placeholder=\"Enter Project Name\"\r\n                  value={this.state.p_name}\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"p_location\"\r\n                  placeholder=\"Project Location\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.p_location}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"p_description\"\r\n                  placeholder=\"Describe the Project\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.p_description}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"p_image\"\r\n                  placeholder=\"paste the URL here\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.p_image}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"p_service\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.p_service}\r\n                >\r\n                  <option value=\"empty\">SELECT A SERVICE</option>\r\n                  {this.state.slist &&\r\n                    Object.keys(this.state.slist.val()).map((id) => {\r\n                      let s = this.state.slist.val();\r\n                      return (\r\n                        <option key={id} value={id}>\r\n                          {s[id][\"service_name\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  id=\"p_active\"\r\n                  onChange={this.updateState}\r\n                  value={this.state.p_active}\r\n                >\r\n                  <option value=\"empty\">Select Status</option>\r\n                  <option value=\"true\">True</option>\r\n                  <option value=\"false\">False</option>\r\n                </select>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() =>\r\n                  this.handleComplete(\r\n                    this.state.p_name,\r\n                    this.state.p_description,\r\n                    this.state.p_image,\r\n                    this.state.p_projectid,\r\n                    this.state.p_service,\r\n                    this.state.p_location,\r\n                    this.state.p_active\r\n                  )\r\n                }\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Update Project\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-5\">\r\n              <h5>Upload images here</h5>\r\n\r\n              {this.state.isUploading && (\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{ width: this.state.progress + \"%\" }}\r\n                  aria-valuenow={this.state.progress}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {this.state.progress}\r\n                </div>\r\n              )}\r\n              {this.state.avatarURL && (\r\n                <div className=\"uploaded image\">\r\n                  <label>Image:</label>\r\n                  <a target=\"_blank\" href={this.state.avatarURL}>\r\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\r\n                  </a>\r\n                </div>\r\n              )}\r\n              <FileUploader\r\n                accept=\"image/*\"\r\n                name=\"avatar\"\r\n                randomizeFilename\r\n                storageRef={fbStorage.ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleProgress}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-5\">\r\n              <input\r\n                type=\"checkbox\"\r\n                onChange={this.showallservices}\r\n                checked={this.state.showallservices}\r\n              />{\" \"}\r\n              SHOW ALL PROJECTS\r\n              <br />\r\n              <div className=\"row\">\r\n                {this.state.showallservices &&\r\n                  Object.keys(this.state.plist.val()).map((id) => {\r\n                    let p = this.state.plist.val();\r\n                    return (\r\n                      <div\r\n                        className=\"col-12 mb-3\"\r\n                        style={{ padding: \"10px\", border: \"1px solid black\" }}\r\n                      >\r\n                        <span className=\"tex-left\">\r\n                          {p[id][\"project_name\"]}\r\n                        </span>\r\n                        <span style={{ float: \"right\" }}>\r\n                          <button\r\n                            onClick={() => this.deleteProject(id)}\r\n                            className=\"btn btn-danger\"\r\n                          >\r\n                            Delete Project\r\n                          </button>\r\n                        </span>\r\n                      </div>\r\n                    );\r\n                  })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditProject;\r\n","import React, { Component } from \"react\";\r\nimport Carousel, { Modal, ModalGateway } from \"react-images\";\r\n\r\n\r\nclass GalleryU extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n       validate: false,\r\n    viewerIsOpen: false,\r\n      modalIsOpen: false\r\n  \r\n      }\r\n    };\r\n  componentDidMount = () => {\r\n  }\r\n  //  openLightbox = (event,{index}) => {\r\n  //   this.viewerIsOpen(true,index);\r\n  // }\r\n\r\n  openLightbox = (i) => {\r\n    \r\n    this.viewerIsOpen(true,i);\r\n  }\r\n  viewerIsOpen = (bool,index) => {\r\n    // setCurrentImage(index);\r\n    // setViewerIsOpen(true);\r\n\r\n    this.setState({modalIsOpen:bool,currentIndex:index})\r\n  }\r\n\r\n   closeLightbox = () => {\r\n    this.setState({modalIsOpen:false,currentIndex:0})\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const  currentIndex  = this.state.currentIndex;\r\n      return (\r\n            <div>\r\n              <Gallery>\r\n            {this.props.images.map(({ src }, j) => (\r\n              <Image onClick={() => this.openLightbox(j)} key={src}>\r\n                <div style={{backgroundImage:`url(${src})`,height:'200px',backgroundPosition:'center',backgroundSize:'cover'}}></div>\r\n                \r\n              </Image>\r\n            ))}\r\n          </Gallery>\r\n          <ModalGateway>\r\n            {this.state.modalIsOpen ? (\r\n              <Modal onClose={this.closeLightbox}>\r\n                <Carousel views={this.props.images} currentIndex={currentIndex} />\r\n              </Modal>\r\n            ) : null}\r\n          </ModalGateway>\r\n            </div>\r\n          );\r\n      \r\n  }\r\n  \r\n}\r\n\r\nconst Gallery = (props) => (\r\n  <div\r\n    style={{\r\n      overflow: 'hidden',\r\n      marginLeft: -gutter,\r\n      marginRight: -gutter,\r\n    }}\r\n    {...props}\r\n  />\r\n);\r\n\r\n\r\nconst gutter = 2;\r\nconst Image = (props) => (\r\n  <div\r\n    style={{\r\n      backgroundColor: '#eee',\r\n      boxSizing: 'border-box',\r\n      backgroundPosition:'center',\r\n      float: 'left',\r\n      margin: gutter,\r\n      overflow: 'hidden',\r\n      height: '200px',\r\n      paddingBottom: '16%',\r\n      position: 'relative',\r\n      width: `calc(33.33% - ${gutter * 2}px)`,\r\n\r\n      ':hover': {\r\n        opacity: 0.9,\r\n      },\r\n    }}\r\n    {...props}\r\n  />\r\n);\r\n\r\nexport default  GalleryU;","import React, { Component } from \"react\";\r\nimport { db } from '../firebase';\r\nimport { History, Star, Money, Accessibility } from \"grommet-icons\";\r\nimport GalleryU from \"./gallery\";\r\n\r\nclass Trip extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ilist: false\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    // will be true\r\n    const locationChanged =\r\n      this.props.location !== prevProps.location;\r\n      if(locationChanged)\r\n      {\r\n        let projectpagename = this.props.match.params.projectname;\r\n        this.getTripDetailsByPageName(projectpagename);\r\n      }\r\n     \r\n    // INCORRECT, will *always* be false because history is mutable.\r\n    // const locationChanged =\r\n    //   this.props.history.location !== prevProps.history.location;\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let projectpagename = this.props.match.params.projectname;\r\n    this.getProjectDetailsByPageName(projectpagename);\r\n  }\r\n\r\n  getImagesByProject = (projectid) => {\r\n    let list, photosList = [];\r\n    let tripsRef = db.ref(\"/projectimages\");\r\n    tripsRef.orderByChild(\"image_projectid\").equalTo(projectid).once(\"value\", snapshot => {\r\n      if (snapshot.val()) {\r\n        list = snapshot.val();\r\n        Object.keys(list).map((id, index) => {\r\n          photosList.push({ 'src': list[id][\"image_projectimage\"], \r\n          'caption':list[id][\"image_caption\"] });\r\n        })\r\n        this.setState({ photosList: photosList });\r\n      } else {\r\n        this.setState({ photosList: null })\r\n      }\r\n    })\r\n  }\r\n\r\n  getProjectDetailsByPageName = (pageName) => {\r\n    //Search function firebase realtime database this way of getting data is efficient.\r\n    let tripRef = db.ref(\"/projects\");\r\n    tripRef.orderByChild(\"project_pagename\").equalTo(pageName).once(\"child_added\", snapshot => {\r\n      \r\n      document.title = snapshot.val()[\"project_name\"];\r\n      this.setState({ projectDetails: snapshot.val() });\r\n      this.getImagesByProject(snapshot.key);\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"\">\r\n          {this.state.projectDetails ?\r\n            <div className=\"tripgroup-details\">\r\n             \r\n              <div className=\"container\">\r\n              <div className=\"row\">\r\n                    <div className=\"col-12 mb-3\">\r\n                    <h2 className=\"sdetail-title\">{this.state.projectDetails[\"project_name\"]}</h2>\r\n                    </div>\r\n                    \r\n                    <div className=\"col-12 text-justify\">\r\n                    <h5 className=\"sdetail-description\">{this.state.projectDetails[\"project_description\"]}</h5>\r\n                    </div>\r\n                  <div className=\"col-12 my-2\">\r\n                    {this.state.photosList ? (\r\n                      <GalleryU images={this.state.photosList} />\r\n                    ) : null}\r\n                  </div>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>: null\r\n          }\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Trip;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db } from \"../firebase\";\r\n\r\nclass Emails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unreadCount: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cf_ref = db.ref(\"/contactrequests\");\r\n    cf_ref.orderByChild(\"contact_name\").once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ cflist: snapshot });\r\n      }\r\n    });\r\n\r\n    let unreadCount = 0;\r\n\r\n    cf_ref\r\n      .orderByChild(\"contact_viewed\")\r\n      .equalTo(false)\r\n      .once(\"value\", function (snapshot) {\r\n        return unreadCount;\r\n      })\r\n      .then((unreadCount) => {\r\n        let count;\r\n        if (unreadCount.val()) {\r\n          count = Object.keys(unreadCount.val()).length;\r\n        } else {\r\n          count = 0;\r\n        }\r\n        this.setState({ unreadCount: count });\r\n      });\r\n  };\r\n\r\n  getNumberOfDaysAgo = (date) => {\r\n    const date2 = new Date(Date.now());\r\n    const date1 = new Date(date);\r\n    const diffTime = Math.abs(date2 - date1);\r\n\r\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"my-3\">\r\n            <p>{this.state.unreadCount} unread email(s)</p>\r\n          </div>\r\n          <div className=\"list-group\">\r\n            {this.state.cflist &&\r\n              Object.keys(this.state.cflist.val()).map((id) => {\r\n                let cf = this.state.cflist.val();\r\n                return (\r\n                  <Link\r\n                    key={id}\r\n                    className={\r\n                      \"list-group-item list-group-item-action no-text-decoration \" +\r\n                      (cf[id][\"contact_viewed\"] ? \" \" : \"email-unread\")\r\n                    }\r\n                    to={{ pathname: `/email/${[id]}` }}\r\n                  >\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                      <h6 className=\"mb-2 text-dark\">\r\n                        <b>From:</b> {cf[id][\"contact_email\"]}\r\n                      </h6>\r\n                      <small>\r\n                        {this.getNumberOfDaysAgo(\r\n                          cf[id][\"contact_request_created_at\"]\r\n                        )}{\" \"}\r\n                        day(s) ago\r\n                      </small>\r\n                    </div>\r\n                    <small className=\"text-muted\">\r\n                      <b>SUBJECT:</b> {cf[id][\"contact_comments\"]}\r\n                    </small>\r\n                  </Link>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Emails;\r\n","import React, { Component } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass EmailDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    let cf_id = this.props.match.params.email;\r\n    const cf_ref = db.ref(\"/contactrequests/\" + cf_id);\r\n    cf_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ cflist: snapshot.val() });\r\n      }\r\n    });\r\n  };\r\n\r\n  getNumberOfDaysAgo = (date) => {\r\n    const date2 = new Date(Date.now());\r\n    const date1 = new Date(date);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  updateEmailViewedStatus = (currentState) => {\r\n    let updatedState;\r\n    if (currentState) {\r\n      updatedState = false;\r\n    } else {\r\n      updatedState = true;\r\n    }\r\n    let cf_id = this.props.match.params.email;\r\n    const cf_ref = db.ref(\"/contactrequests/\" + cf_id);\r\n    cf_ref.update(\r\n      {\r\n        contact_viewed: updatedState,\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        } else {\r\n          alert(\"Updated Status Successfully.\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"list-group\">\r\n            {this.state.cflist && (\r\n              <div className=\"emailDetails\">\r\n                <div className=\"row email-details-header mb-3\">\r\n                  <div className=\"col-12\">\r\n                    <p className=\"text-dark d-inline\">\r\n                      FROM: {this.state.cflist[\"contact_email\"]}\r\n                    </p>\r\n                    <small className=\"d-inline float-right\">\r\n                      {this.getNumberOfDaysAgo(\r\n                        this.state.cflist[\"contact_request_created_at\"]\r\n                      )}{\" \"}\r\n                      day(s) ago\r\n                    </small>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 mb-2 text-center\">\r\n                    <Link\r\n                      className=\"btn btn-primary btn-submit text-white\"\r\n                      onClick={() =>\r\n                        this.updateEmailViewedStatus(\r\n                          this.state.cflist[\"contact_viewed\"]\r\n                        )\r\n                      }\r\n                    >\r\n                      {this.state.cflist[\"contact_viewed\"]\r\n                        ? \"Mark As Unread\"\r\n                        : \"Mark As Read\"}\r\n                    </Link>\r\n                  </div>\r\n                  <div className=\"col-md-6 mb-2 text-center\">\r\n                    <a\r\n                      className=\"btn btn-primary btn-submit text-white\"\r\n                      href={\"mailto:\" + this.state.cflist[\"contact_email\"]}\r\n                    >\r\n                      Email Customer\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"emailName\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"emailName\"\r\n                    value={\r\n                      this.state.cflist[\"contact_first_name\"] +\r\n                      \" \" +\r\n                      this.state.cflist[\"contact_last_name\"]\r\n                    }\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"emailEAddress\">Email Address</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"emailEAddress\"\r\n                    value={this.state.cflist[\"contact_email\"]}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"emailPhone\">Phone Number</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"emailPhone\"\r\n                    value={\r\n                      this.state.cflist[\"contact_phone\"]\r\n                        ? this.state.cflist[\"contact_phone\"]\r\n                        : \"N/A\"\r\n                    }\r\n                    readOnly\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"emailMessage\">Message</label>\r\n                  <textarea\r\n                    className=\"form-control\"\r\n                    id=\"emailMessage\"\r\n                    value={this.state.cflist[\"contact_comments\"]}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EmailDetails;\r\n","import React, { Component } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass CreateReviewLink extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"THEM - Create Link\"; // SET PAGE TITLE\r\n    // GET ALL PROJECTS FROM FIREBASE REAL TIME DATABASE\r\n\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ plist: snapshot });\r\n        this.forceUpdate();\r\n      }\r\n    });\r\n  };\r\n\r\n  updateProject = (e) => {\r\n    if (!e.target.value || e.target.value === \"empty\") {\r\n      this.setState({ projectid: null, generatedLink: null });\r\n    } else {\r\n      let url = \"https://bythem.studio/feedback/\" + e.target.value;\r\n      this.setState({ projectid: e.target.value, generatedLink: url });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"page-content container\">\r\n          <div className=\"row\">\r\n            {this.state.plist ? (\r\n              <>\r\n                <div className=\"col-12 mb-4\">\r\n                  <h3>Create Review Link</h3>\r\n                </div>\r\n                <div className=\"form-group col-12\">\r\n                  <select\r\n                    className=\"form-control\"\r\n                    value={this.state.i_projectid}\r\n                    id=\"i_projectid\"\r\n                    onChange={this.updateProject}\r\n                  >\r\n                    <option value=\"empty\">SELECT A PROJECT</option>\r\n                    {this.state.plist &&\r\n                      Object.keys(this.state.plist.val()).map((id) => {\r\n                        let p = this.state.plist.val();\r\n                        return (\r\n                          <option value={id} key={id}>\r\n                            {p[id][\"project_name\"]}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"col-12 my-3\">\r\n                  {this.state.generatedLink ? (\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: \"rgba(63,63,63,1)\",\r\n                        padding: \"20px\",\r\n                        borderRadius: \"7px\",\r\n                      }}\r\n                      className=\"d-flex flex-row\"\r\n                    >\r\n                      <div className=\"text-white\">\r\n                        {this.state.generatedLink}\r\n                      </div>\r\n\r\n                      <div className=\"ml-auto\">\r\n                        <button\r\n                          className=\"btn btn-primary btn-sm\"\r\n                          onClick={() =>\r\n                            navigator.clipboard.writeText(\r\n                              this.state.generatedLink\r\n                            )\r\n                          }\r\n                        >\r\n                          COPY\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateReviewLink;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { db } from \"../firebase\";\r\nimport { Star } from \"grommet-icons\";\r\n\r\nclass Feedbacks extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      unreadCount: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    document.title = \"THEM | Feedbacks\";\r\n    const pref = db.ref(\"/projects\").once(\"value\", (snapshot) => {\r\n      this.setState({ plist: snapshot.val() });\r\n    });\r\n\r\n    const cf_ref = db.ref(\"/feedbacks\");\r\n    cf_ref.orderByChild(\"cusmt\").once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ flist: snapshot });\r\n      }\r\n    });\r\n\r\n    let unreadCount = 0;\r\n\r\n    cf_ref\r\n      .orderByChild(\"contact_viewed\")\r\n      .equalTo(false)\r\n      .once(\"value\", function (snapshot) {\r\n        return unreadCount;\r\n      })\r\n      .then((unreadCount) => {\r\n        let count;\r\n        if (unreadCount.val()) {\r\n          count = Object.keys(unreadCount.val()).length;\r\n        } else {\r\n          count = 0;\r\n        }\r\n        this.setState({ unreadCount: count });\r\n      });\r\n  };\r\n\r\n  getProjectName = (projectid) => {\r\n    let projects = this.state.plist;\r\n    return projects[projectid].project_name;\r\n  };\r\n\r\n  getNumberOfDaysAgo = (date) => {\r\n    const date2 = new Date(Date.now());\r\n    const date1 = new Date(date);\r\n    const diffTime = Math.abs(date2 - date1);\r\n\r\n    return Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"my-3\">\r\n            <h2 className=\"page-title\">Customer Feedbacks</h2>\r\n          </div>\r\n          <div className=\"list-group\">\r\n            {this.state.flist &&\r\n              Object.keys(this.state.flist.val()).map((id) => {\r\n                let cf = this.state.flist.val();\r\n                return (\r\n                  <div\r\n                    key={id}\r\n                    className={\r\n                      \"list-group-item list-group-item-action no-text-decoration \" +\r\n                      (cf[id][\"contact_viewed\"] ? \" \" : \"email-unread\")\r\n                    }\r\n                  >\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                      <h6 className=\"mb-2 text-dark\">\r\n                        <b>Project: </b>\r\n                        {this.getProjectName(cf[id].customerproject_id)}\r\n                      </h6>\r\n                      <small>\r\n                        {this.getNumberOfDaysAgo(cf[id].feedback_created_at)}{\" \"}\r\n                        day(s) ago\r\n                      </small>\r\n                    </div>\r\n                    <p className=\"text-muted my-3\">\r\n                      <b>Comments:</b> {cf[id][\"feedback_comments\"]}\r\n                    </p>\r\n                    <div className=\"d-flex flex-column flex-sm-row\">\r\n                      <div className=\"form-group\">\r\n                        <label>Rating</label>\r\n                        <div className=\"text-left\">\r\n                          {[...Array(5)].map((res, i) => {\r\n                            return (\r\n                              <Star\r\n                                key={i + 1}\r\n                                color={\r\n                                  cf[id].feedback_rating >= i + 1\r\n                                    ? \"#69884D\"\r\n                                    : \"silver\"\r\n                                }\r\n                              />\r\n                            );\r\n                          })}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"ml-sm-auto\">\r\n                        <a\r\n                          className=\"btn btn-primary btn-submit text-white\"\r\n                          href={\"mailto:\" + cf[id].feedback_email}\r\n                        >\r\n                          Email Customer\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedbacks;\r\n","import React, { useState, useEffect, useParams } from \"react\";\r\nimport { Star, BottomCorner } from \"grommet-icons\";\r\nimport { ToastProvider, useToasts } from \"react-toast-notifications\";\r\nimport PageContent from \"../components/pagecontent\";\r\nimport { db } from \"../firebase\";\r\nimport { get } from \"jquery\";\r\nexport default function FeedBack(props) {\r\n  // Declare a new state variable, which we'll call \"count\"  const [count, setCount] = useState(0);\r\n  //const { addToast } = useToasts()\r\n\r\n  const [formSubmittedMessage, setFormSubmittedMessage] = useState(\"\");\r\n  const [requiredFieldErrorMessage, setRequiredFieldErrorMessage] = useState();\r\n\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [fpId, setFpId] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let fpId = props.match.params.feedbackid;\r\n    setFpId(fpId);\r\n    document.title = \"THEM | Feedback\";\r\n    console.log(\"test\");\r\n    getFeedBackStatus(fpId);\r\n  }, []);\r\n\r\n  function getFeedBackStatus(id) {\r\n    let feedbackref = db.ref(\"feedbacks\");\r\n    feedbackref\r\n      .orderByChild(\"customerproject_id\")\r\n      .equalTo(id)\r\n      .once(\"value\", (snapshot) => {\r\n        if (snapshot.val()) {\r\n          setFormSubmitted(true);\r\n          setFormSubmittedMessage(\r\n            \"It looks like you already submitted the feedback. Thank you so much !!\"\r\n          );\r\n        } else {\r\n          setFormSubmitted(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  const FormWithToasts = () => {\r\n    const { addToast } = useToasts();\r\n    const [email, setEmail] = useState(\"\");\r\n    const [comments, setComments] = useState(\"\");\r\n    const [hoverIndex, setHoverIndex] = useState(0);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n    const [state, setState] = useState({\r\n      email: \"\",\r\n      comments: \"\",\r\n      selectedIndex: 0,\r\n      hoverIndex: 0,\r\n    });\r\n    function submitForm() {\r\n      if (fpId && email && comments && parseInt(selectedIndex) > 0) {\r\n        if (email.indexOf(\"@\") > 0 && email.indexOf(\".\") > 0) {\r\n          const feedbackID = db.ref(\"/feedbacks\").push();\r\n          feedbackID.set(\r\n            {\r\n              customerproject_id: fpId,\r\n              feedback_email: email,\r\n              feedback_rating: selectedIndex,\r\n              feedback_comments: comments,\r\n              feedback_viewed: false,\r\n              feedback_created_at: Date.now(),\r\n            },\r\n            function (error) {\r\n              console.log(error);\r\n              if (error) {\r\n                addToast(\r\n                  \"Sorry for the inconvenience, please try again later.\",\r\n                  {\r\n                    appearance: \"error\",\r\n                  }\r\n                );\r\n              } else {\r\n                setFormSubmitted(true);\r\n                setRequiredFieldErrorMessage(null);\r\n                setFormSubmittedMessage(\"Thank you for your Feedback.\");\r\n                addToast(\"Saved Successfully\", { appearance: \"success\" });\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          setRequiredFieldErrorMessage(\"Please enter valid Email Address.\");\r\n        }\r\n      } else {\r\n        setRequiredFieldErrorMessage(\"Please complete all the below field(s).\");\r\n      }\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        {formSubmitted ? (\r\n          <>{formSubmittedMessage}</>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex flex-column mx-auto\"\r\n            style={{\r\n              maxWidth: \"400px\",\r\n              boxShadow: \"0 5px 15px #dcdada, 0 2px 3px #dcdada\",\r\n              borderRadius: \"10px\",\r\n              padding: \"20px\",\r\n            }}\r\n          >\r\n            <h2 className=\"text-center mb-3 theme-hover form-header\">\r\n              Send Feedback\r\n            </h2>\r\n            {requiredFieldErrorMessage ? (\r\n              <small className=\"text-center mb-3 text-danger\">\r\n                {requiredFieldErrorMessage}\r\n              </small>\r\n            ) : null}\r\n\r\n            <div className=\"form-group\">\r\n              <label>Email address</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                aria-describedby=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <small className=\"form-text text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Comments</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"comments\"\r\n                aria-describedby=\"Comments\"\r\n                value={comments}\r\n                onChange={(e) => setComments(e.target.value)}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Rate Us</label>\r\n              <div className=\"text-center\">\r\n                {[...Array(5)].map((res, i) => {\r\n                  return (\r\n                    <Star\r\n                      size={\"large\"}\r\n                      key={i + 1}\r\n                      onMouseEnter={() => setHoverIndex(i + 1)}\r\n                      onMouseLeave={() => setHoverIndex(0)}\r\n                      onClick={() => setSelectedIndex(i + 1)}\r\n                      color={\r\n                        hoverIndex >= i + 1 || selectedIndex >= i + 1\r\n                          ? \"#69884D\"\r\n                          : \"silver\"\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              onClick={submitForm}\r\n              className=\"btn btn-primary mt-3\"\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"page-content container\">\r\n      <div className=\"mb-5\">\r\n        <PageContent pagecontentid=\"-MEzeDwKWa-rl6U2E03i\" />\r\n      </div>\r\n      {formSubmitted ? (\r\n        <>\r\n          <div class=\"card text-center theme font-weight-bold\">\r\n            <div class=\"card-body\">{formSubmittedMessage}</div>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <ToastProvider\r\n          autoDismiss\r\n          autoDismissTimeout={6000}\r\n          placement=\"top-center\"\r\n        >\r\n          <FormWithToasts />\r\n        </ToastProvider>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export const FETCH_USERDETAILS_PENDING = \"FETCH_USERDETAILS_PENDING\";\r\nexport const FETCH_USERDETAILS_SUCCESS = \"FETCH_USERDETAILS_SUCCESS\";\r\nexport const FETCH_USERDETAILS_ERROR = \"FETCH_USERDETAILS_ERROR\";\r\n\r\n/** Update user details when the firebase authentication is changed */\r\nexport const UPDATE_USER = (auth) => {\r\n  return {\r\n    type: \"UPDATE_USER\",\r\n    auth: auth,\r\n  };\r\n};\r\n\r\n/** Update the store as the user signs out */\r\nexport const SIGN_OUT = () => {\r\n  return {\r\n    type: \"SIGNOUT_USER\",\r\n  };\r\n};\r\n\r\nconst initialstate = {\r\n  pending: false,\r\n  userDetails: [],\r\n  error: null,\r\n};\r\n\r\nexport function fetchUserDetailsPending() {\r\n  return {\r\n    type: FETCH_USERDETAILS_PENDING,\r\n    pending: true,\r\n  };\r\n}\r\nexport function fetchUserDetailsSuccess(userDetails) {\r\n  return {\r\n    type: FETCH_USERDETAILS_SUCCESS,\r\n    pending: false,\r\n    userDetails: userDetails,\r\n  };\r\n}\r\nexport function fetchUserDetailsError(error) {\r\n  return {\r\n    type: FETCH_USERDETAILS_ERROR,\r\n    error: error,\r\n    pending: false,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\nimport FileUploader from \"react-firebase-file-uploader\";\r\nimport GalleryU from \"./gallery\";\r\n\r\nclass AddProjectImages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n      filenames: [],\r\n      downloadURLs: [],\r\n    };\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  updateProject = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n\r\n    if (e.target.value || e.target.value !== \"empty\") {\r\n      this.getImagesByProject(e.target.value);\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    /** BIND PROJECTS DROPDOWN WITH AVAILABLE SERVICE */\r\n    const p_ref = db.ref(\"/projects\");\r\n    p_ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ plist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  updateCaption = (id, val, route) => {\r\n    if (val) {\r\n      let ref = db.ref(\"/projectimages/\" + route);\r\n      ref.update({\r\n        image_caption: val,\r\n      });\r\n      this.getImagesByProject(this.state.i_projectid);\r\n    }\r\n  };\r\n\r\n  getImagesByProject = (projectid) => {\r\n    let list,\r\n      photosList = [];\r\n    let projectimagesRef = db.ref(\"/projectimages\");\r\n    projectimagesRef\r\n      .orderByChild(\"image_projectid\")\r\n      .equalTo(projectid)\r\n      .once(\"value\", (snapshot) => {\r\n        if (snapshot.val()) {\r\n          list = snapshot.val();\r\n          Object.keys(list).map((id, index) => {\r\n            photosList.push({\r\n              src: list[id][\"image_projectimage\"],\r\n              caption: list[id][\"image_caption\"],\r\n              route: id,\r\n            });\r\n          });\r\n          this.setState({ photosList: photosList });\r\n        } else {\r\n          this.setState({ photosList: null });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleComplete = (i_projectid, i_projectimage, i_projectimagecaption) => {\r\n    const projectID = db.ref(\"/projectimages\").push();\r\n    projectID.set(\r\n      {\r\n        image_projectid: i_projectid,\r\n        image_projectimage: i_projectimage,\r\n        image_caption: i_projectimagecaption,\r\n        image_created_at: Date.now(),\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        } else {\r\n          alert(\"Data saved successfully.\");\r\n          window.location.reload();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  updateMultipleImagesToProject = async (\r\n    i_projectid,\r\n    i_projectimage,\r\n    i_projectimagecaption\r\n  ) => {\r\n    const projectID = await db.ref(\"/projectimages\").push();\r\n    projectID.set(\r\n      {\r\n        image_projectid: i_projectid,\r\n        image_projectimage: i_projectimage,\r\n        image_caption: i_projectimagecaption,\r\n        image_created_at: Date.now(),\r\n      },\r\n      function (error) {\r\n        if (error) {\r\n          alert(\"Data could not be saved.\" + error);\r\n        }\r\n      }\r\n    );\r\n    this.getImagesByProject(i_projectid);\r\n  };\r\n\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n  handleProgress = (progress) => this.setState({ progress });\r\n\r\n  handleUploadError = (error) => {\r\n    this.setState({ isUploading: false });\r\n    alert(error);\r\n  };\r\n\r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then((url) => this.setState({ avatarURL: url, i_projectimage: url }));\r\n  };\r\n\r\n  handleMultipleUploadSuccess = async (filename) => {\r\n    let downloadURL = await fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL();\r\n\r\n    this.setState((oldState) => ({\r\n      filenames: [...oldState.filenames, filename],\r\n      downloadURLs: [...oldState.downloadURLs, downloadURL],\r\n      progress: 100,\r\n      isUploading: false,\r\n    }));\r\n    //console.log(downloadURL);\r\n    this.updateMultipleImagesToProject(\r\n      this.state.i_projectid,\r\n      downloadURL,\r\n      \" \"\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2>Add New Project Image</h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={this.state.i_projectid}\r\n                  id=\"i_projectid\"\r\n                  onChange={this.updateProject}\r\n                >\r\n                  <option value=\"empty\">SELECT A PROJECT</option>\r\n                  {this.state.plist &&\r\n                    Object.keys(this.state.plist.val()).map((id) => {\r\n                      let p = this.state.plist.val();\r\n                      return (\r\n                        <option value={id} key={id}>\r\n                          {p[id][\"project_name\"]}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.i_projectimage}\r\n                  id=\"i_projectimage\"\r\n                  placeholder=\"Project Image url \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.i_projectimagecaption}\r\n                  id=\"i_projectimagecaption\"\r\n                  placeholder=\"Project Image Caption \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n\r\n              <button\r\n                onClick={() =>\r\n                  this.handleComplete(\r\n                    this.state.i_projectid,\r\n                    this.state.i_projectimage,\r\n                    this.state.i_projectimagecaption\r\n                  )\r\n                }\r\n                className=\"btn btn-primary\"\r\n              >\r\n                SUBMIT\r\n              </button>\r\n            </div>\r\n            <div className=\"col-12 mt-5\">\r\n              <h5>Upload images here</h5>\r\n\r\n              {this.state.isUploading && (\r\n                <div\r\n                  className=\"progress-bar\"\r\n                  role=\"progressbar\"\r\n                  style={{ width: this.state.progress + \"%\" }}\r\n                  aria-valuenow={this.state.progress}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                >\r\n                  {this.state.progress}\r\n                </div>\r\n              )}\r\n              {this.state.avatarURL && (\r\n                <div className=\"uploaded image\">\r\n                  <label>Image:</label>\r\n                  <a target=\"_blank\" href={this.state.avatarURL}>\r\n                    <img className=\"img img-fluid\" src={this.state.avatarURL} />\r\n                  </a>\r\n                </div>\r\n              )}\r\n              <FileUploader\r\n                accept=\"image/*\"\r\n                name=\"avatar\"\r\n                randomizeFilename\r\n                storageRef={fbStorage.ref(\"images\")}\r\n                onUploadStart={this.handleUploadStart}\r\n                onUploadError={this.handleUploadError}\r\n                onUploadSuccess={this.handleUploadSuccess}\r\n                onProgress={this.handleProgress}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"col-12 mt-5\">\r\n              {this.state.i_projectid !== \"empty\" && this.state.i_projectid ? (\r\n                <React.Fragment>\r\n                  <h5>Add Multiple Images Here:</h5>\r\n                  <FileUploader\r\n                    accept=\"image/*\"\r\n                    name=\"avatar\"\r\n                    randomizeFilename\r\n                    storageRef={fbStorage.ref(\"images\")}\r\n                    onUploadStart={this.handleUploadStart}\r\n                    onUploadError={this.handleUploadError}\r\n                    onUploadSuccess={this.handleMultipleUploadSuccess}\r\n                    onProgress={this.handleProgress}\r\n                    multiple\r\n                  />\r\n                </React.Fragment>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"col-12 mt-5\">\r\n              {this.state.photosList\r\n                ? this.state.photosList.map((val, id) => {\r\n                    return (\r\n                      <div className=\"row\" key={id}>\r\n                        <div\r\n                          className=\"col-sm-6 my-2\"\r\n                          style={{\r\n                            backgroundImage: `url(${val[\"src\"]})`,\r\n                            backgroundSize: \"cover\",\r\n                            backgroundPosition: \"center\",\r\n                            height: \"200px\",\r\n                          }}\r\n                        ></div>\r\n                        <div className=\"col-sm-6 my-2\">\r\n                          <b>Current Caption:</b> {val[\"caption\"]}\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Image Caption \"\r\n                            onBlur={(e) =>\r\n                              this.updateCaption(\r\n                                id,\r\n                                e.target.value,\r\n                                val[\"route\"]\r\n                              )\r\n                            }\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddProjectImages;\r\n","import React, { Component } from \"react\";\r\nimport { db } from '../firebase';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FacebookOption, Instagram, Phone } from \"grommet-icons\";\r\n\r\n\r\nclass Sitemap extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.state = {\r\n          data: ''\r\n        }\r\n      };\r\n\r\n    componentDidMount = () => {\r\n        /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\r\n        const s_ref = db.ref(\"/services\");\r\n        s_ref.once(\"value\", snapshot => {\r\n          if (snapshot) {\r\n            this.setState({ slist: snapshot })\r\n          }\r\n        })\r\n\r\n\r\n        const p_ref = db.ref(\"/projects\");\r\n        p_ref.once(\"value\", snapshot => {\r\n          if (snapshot) {\r\n            this.setState({ plist: snapshot })\r\n          }\r\n        })\r\n      }\r\n\r\n\r\n    \r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"mt-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row \">\r\n                            <div className=\"col-12\">\r\n                                <Link to=\"/\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">THEM STUDIOS</h5></Link>\r\n                            </div>\r\n                            <div className=\"col-12 d-flex flex-column\">\r\n\r\n                                <Link to=\"/services\" className=\"mt-2\">Services</Link>\r\n                                <Link to=\"/portfolio\" className=\"mt-2\">Portfolio</Link>\r\n                                <Link to=\"/portfolio\" className=\"mt-2\">Contact</Link>\r\n                            </div>\r\n                            <div className=\"col-12 mt-5\">\r\n                                <Link to=\"/services\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">SERVICES</h5></Link>\r\n                            </div>\r\n                            <div className=\"col-12 d-flex flex-column\">\r\n                            {this.state.slist &&\r\n                                Object.keys(this.state.slist.val()).map(id => {\r\n                                    let s = this.state.slist.val();\r\n                                return (\r\n                                    <Link className=\"mt-2\" to={{ pathname: `services/${s[id][\"service_pagename\"]}`, serviceid: `${id}` }}>{s[id][\"service_name\"]}</Link>\r\n\r\n\r\n                                )})\r\n                                }\r\n                                \r\n                            </div>\r\n                            <div className=\"col-12 mt-5\">\r\n                                <Link to=\"/portfolio\" className=\"no-text-decoration footer-text \"> <h5 className=\"text-dark\">PORTFOLIO</h5></Link>\r\n                            </div>\r\n                            <div className=\"col-12 d-flex flex-column\">\r\n                            {this.state.plist &&\r\n                                Object.keys(this.state.plist.val()).map(id => {\r\n                                    let p = this.state.plist.val();\r\n                                return (\r\n                                    <Link className=\"mt-2\" to={{ pathname: `projects/${p[id][\"project_pagename\"]}`, projectid: `${id}` }}>{p[id][\"project_name\"]}</Link>\r\n\r\n\r\n                                )})\r\n                                }\r\n                                \r\n                            </div>\r\n                            \r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Sitemap;","import { useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction ScrollToTop({ history }) {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    }\r\n  }, []);\r\n\r\n  return (null);\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React, { Component } from \"react\";\r\nimport { db, fbStorage } from \"../firebase\";\r\n\r\nclass PageContent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: \"\",\r\n    };\r\n    this.updateState = this.updateState.bind(this);\r\n  }\r\n  updateState = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n  componentDidMount = () => {\r\n    /** BIND SERVICES DROPDOWN WITH AVAILABLE SERVICE */\r\n    this.getContent();\r\n  };\r\n\r\n  getContent = () => {\r\n    const ref = db.ref(\"/pagecontent\");\r\n    ref.once(\"value\", (snapshot) => {\r\n      if (snapshot) {\r\n        this.setState({ contentlist: snapshot });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleComplete = (c_location, c_title, c_description, c_active) => {\r\n    if (c_location && c_description && c_active !== \"empty\") {\r\n      const contentid = db.ref(\"/pagecontent\").push();\r\n      contentid.set(\r\n        {\r\n          content_location: c_location,\r\n          content_title: c_title,\r\n          content_description: c_description,\r\n          content_active: c_active,\r\n          content_pagename: c_title\r\n            .toString()\r\n            .toLowerCase()\r\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\r\n          content_created_at: Date.now(),\r\n        },\r\n        function (error) {\r\n          if (error) {\r\n            alert(\"Data could not be saved.\" + error);\r\n          } else {\r\n            alert(\"Data saved successfully.\");\r\n          }\r\n        }\r\n      );\r\n      this.getContent();\r\n    }\r\n  };\r\n\r\n  handleUpdate = (contentid, c_location, c_title, c_description, c_active) => {\r\n    if (contentid && c_location && c_description && c_active) {\r\n      /* Update the changes made to the service */\r\n\r\n      db.ref(\"/pagecontent/\" + contentid).update(\r\n        {\r\n          content_location: c_location,\r\n          content_title: c_title,\r\n          content_description: c_description,\r\n          content_active: c_active,\r\n          content_pagename: c_title\r\n            .toString()\r\n            .toLowerCase()\r\n            .replace(/\\s/g, \"-\"), //lowercase and no space will be helpful for URLs\r\n          content_created_at: Date.now(),\r\n        },\r\n        function (error) {\r\n          if (error) {\r\n            alert(\"Data could not be saved.\" + error);\r\n          } else {\r\n            alert(\"Data saved successfully.\");\r\n          }\r\n        }\r\n      );\r\n\r\n      this.getContent();\r\n    }\r\n  };\r\n\r\n  handleUploadStart = () => this.setState({ isUploading: true, progress: 0 });\r\n\r\n  handleProgress = (progress) => this.setState({ progress });\r\n\r\n  handleUploadError = (error) => {\r\n    this.setState({ isUploading: false });\r\n    alert(error);\r\n  };\r\n\r\n  handleUploadSuccess = (filename) => {\r\n    this.setState({ avatar: filename, progress: 100, isUploading: false });\r\n    fbStorage\r\n      .ref(\"images\")\r\n      .child(filename)\r\n      .getDownloadURL()\r\n      .then((url) => this.setState({ avatarURL: url, p_image: url }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"container page-content\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <h2>Add New Content</h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.c_location}\r\n                  id=\"c_location\"\r\n                  placeholder=\"Enter Location Name\"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.c_title}\r\n                  id=\"c_title\"\r\n                  placeholder=\"Enter Title \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value={this.state.c_description}\r\n                  id=\"c_description\"\r\n                  placeholder=\"Enter Description \"\r\n                  onChange={this.updateState}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={this.state.c_active}\r\n                  id=\"c_active\"\r\n                  onChange={this.updateState}\r\n                >\r\n                  <option value=\"empty\">SELECT STATUS</option>\r\n                  <option value=\"true\">TRUE</option>\r\n                  <option value=\"false\">FALSE</option>\r\n                </select>\r\n              </div>\r\n\r\n              <button\r\n                onClick={() =>\r\n                  this.handleComplete(\r\n                    this.state.c_location,\r\n                    this.state.c_title,\r\n                    this.state.c_description,\r\n                    this.state.c_active\r\n                  )\r\n                }\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            {this.state.contentlist ? (\r\n              <div className=\"row mt-4\">\r\n                <div className=\"col-12\">\r\n                  <h2>Existing Contents</h2>\r\n                </div>\r\n\r\n                {Object.keys(this.state.contentlist.val()).map((id) => {\r\n                  let c = this.state.contentlist.val();\r\n                  return (\r\n                    <div key={id} className=\"col-md-6 mb-3\">\r\n                      <div className=\"pagecontent-card  h-100\">\r\n                        {/* <img src={p[id][\"project_image\"]} className=\"img img-fluid portfolio-project-image\" /> */}\r\n                        <b>ReferenceID :</b> {id}\r\n                        <div className=\"form-group mt-3\">\r\n                          <label>\r\n                            <b>Location Name:</b> {c[id][\"content_location\"]}\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state[\"c_location_\" + id]}\r\n                            id={\"c_location_\" + id}\r\n                            placeholder=\"Enter Location Name\"\r\n                            onChange={this.updateState}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            <b>Title : </b>\r\n                            {c[id][\"content_title\"]}\r\n                          </label>\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state[\"c_title_\" + id]}\r\n                            id={\"c_title_\" + id}\r\n                            placeholder=\"Enter Title \"\r\n                            onChange={this.updateState}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>\r\n                            <b>\r\n                              Description: <br />\r\n                            </b>{\" \"}\r\n                            {c[id][\"content_description\"]}\r\n                          </label>\r\n                          <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={this.state[\"c_description_\" + id]}\r\n                            id={\"c_description_\" + id}\r\n                            placeholder=\"Enter Description \"\r\n                            onChange={this.updateState}\r\n                          />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <label>{c[id][\"content_active\"]}</label>\r\n                          <select\r\n                            className=\"form-control\"\r\n                            value={this.state[\"c_active_\" + id]}\r\n                            id={\"c_active_\" + id}\r\n                            onChange={this.updateState}\r\n                          >\r\n                            <option value=\"empty\">SELECT STATUS</option>\r\n                            <option value=\"true\">TRUE</option>\r\n                            <option value=\"false\">FALSE</option>\r\n                          </select>\r\n                          <button\r\n                            onClick={() =>\r\n                              this.handleUpdate(\r\n                                id,\r\n                                this.state[\"c_location_\" + id]\r\n                                  ? this.state[\"c_location_\" + id]\r\n                                  : c[id][\"content_location\"],\r\n                                this.state[\"c_title_\" + id]\r\n                                  ? this.state[\"c_title_\" + id]\r\n                                  : c[id][\"content_title\"],\r\n                                this.state[\"c_description_\" + id]\r\n                                  ? this.state[\"c_description_\" + id]\r\n                                  : c[id][\"content_description\"],\r\n                                this.state[\"c_active_\" + id]\r\n                                  ? this.state[\"c_active_\" + id]\r\n                                  : c[id][\"content_active\"]\r\n                              )\r\n                            }\r\n                            className=\"btn btn-primary mt-2 \"\r\n                          >\r\n                            UPDATE\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageContent;\r\n","import {\r\n  FETCH_USERDETAILS_PENDING,\r\n  FETCH_USERDETAILS_SUCCESS,\r\n  FETCH_USERDETAILS_ERROR,\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  pending: false,\r\n  userDetails: [],\r\n  error: null,\r\n};\r\n\r\nexport default function handleuserReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_USERDETAILS_PENDING:\r\n      return {\r\n        ...state,\r\n        pending: true,\r\n      };\r\n    case FETCH_USERDETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        userDetails: action.userDetails,\r\n      };\r\n    case FETCH_USERDETAILS_ERROR:\r\n      return {\r\n        ...state,\r\n        pending: false,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (state) => state.userDetails;\r\nexport const getUserDetailsPending = (state) => state.pending;\r\nexport const getUserDetailsError = (state) => state.error;\r\n","import React, { Component } from \"react\";\r\nimport PageContent from \"../components/pagecontent\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass About extends Component {\r\n  componentDidMount = () => {\r\n    document.title = \"THEM STUDIOS | About theM\";\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\" index-page text-center\">\r\n        <div className=\"container\">\r\n          <div className=\"row mt-5\">\r\n            <div className=\"col-12 col-md-4 mb-2\">\r\n              <PageContent pagecontentid=\"-MDIt4KlYbfKpBOh36ua\" />\r\n            </div>\r\n            <div className=\"col-12 col-md-4 mb-2\">\r\n              <div className=\"h-100 d-flex flex-row align-items-center\">\r\n                <img\r\n                  src=\"https://firebasestorage.googleapis.com/v0/b/bythem-f0fdb.appspot.com/o/images%2Fdbaff600-ba03-4138-9692-1ea93e97578e.webp?alt=media&token=8d63ec35-7025-4b13-9dec-1215a55262bb\"\r\n                  className=\"img img-fluid align-self-center\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12 col-md-4 mb-2\">\r\n              <PageContent pagecontentid=\"-MDGRuhFTBixRVFspb4V\" />\r\n            </div>\r\n\r\n            <div className=\"col-12 \">\r\n              <div className=\"d-flex justify-content-center\">\r\n                <Link\r\n                  to=\"/portfolio\"\r\n                  className=\"btn btn-primary mr-2\"\r\n                  style={{ width: \"127px\" }}\r\n                >\r\n                  View Portfolio\r\n                </Link>\r\n                <Link\r\n                  to=\"/contact\"\r\n                  className=\"btn btn-primary\"\r\n                  style={{ width: \"127px\" }}\r\n                >\r\n                  Contact\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","import {\r\n  fetchUserDetailsError,\r\n  fetchUserDetailsPending,\r\n  fetchUserDetailsSuccess,\r\n} from \"./../actions/index\";\r\nimport { db } from \"../../firebase\";\r\n\r\nfunction fetchUserDetails(user) {\r\n  return (dispath) => {\r\n    dispath(fetchUserDetailsPending());\r\n    console.log(user);\r\n    let dref = db.ref(\"/userdetails/\" + user.uid);\r\n    dref.once(\"value\", (snapshot) => {\r\n      if (snapshot.val()) {\r\n        console.log(\"user exists\");\r\n      } else {\r\n        console.log(\"create user\");\r\n      }\r\n      dispath(fetchUserDetailsSuccess([\"username\", \"uday\"]));\r\n    });\r\n  };\r\n}\r\n\r\nexport default fetchUserDetails;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Redirect, Switch, Link } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport \"./App.css\";\r\nimport IndexPage from \"./components/index\";\r\nimport Services from \"./components/services\";\r\nimport NavBar from \"./components/navbar\";\r\nimport AddService from \"./components/addservice\";\r\nimport Footer from \"./components/footer\";\r\nimport WebImages from \"./components/webimages\";\r\nimport Service from \"./components/service\";\r\nimport Login from \"./components/login\";\r\nimport PrivateRoute from \"./components/privateroute\";\r\nimport Admin from \"./components/admin\";\r\nimport AddProject from \"./components/addproject\";\r\nimport EditService from \"./components/editservice\";\r\nimport Portfolio from \"./components/portfolio\";\r\nimport Contact from \"./components/contact\";\r\nimport EditProject from \"./components/editproject\";\r\nimport Project from \"./components/project\";\r\nimport Emails from \"./components/emails\";\r\nimport EmailDetails from \"./components/emaildetails\";\r\nimport CreateReviewLinks from \"./components/createReviewLink\";\r\nimport FeedBacks from \"./components/feedbacks\";\r\nimport FeedBack from \"./components/feedback\";\r\nimport { fbAuth } from \"./firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { UPDATE_USER, SIGN_OUT } from \"./js/actions/index\";\r\nimport AddProjectImages from \"./components/addprojectimages\";\r\nimport Sitemap from \"./components/sitemap\";\r\nimport ScrollToTop from \"./components/scrolltotop\";\r\nimport PageContents from \"./components/pagecontents\";\r\nimport { Home, Mail, Power, User, Star } from \"grommet-icons\";\r\nimport {\r\n  getUserDetails,\r\n  getUserDetailsPending,\r\n  getUserDetailsError,\r\n} from \"./js/reducers/handleuserReducer\";\r\nimport About from \"./components/about\";\r\nimport fetchUserDetails from \"./js/actioncreators/getUserDetails\";\r\nimport Feedback from \"./components/feedback\";\r\nimport Feedbacks from \"./components/feedbacks\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userDetailsError: getUserDetailsError(state),\r\n  userDetails: getUserDetails(state),\r\n  userDetailsPending: getUserDetailsPending(state),\r\n  useractivity: state.useractivity,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) =>\r\n  bindActionCreators(\r\n    {\r\n      fetchUserDetails: fetchUserDetails,\r\n      UPDATE_USER: UPDATE_USER,\r\n      SIGN_OUT: SIGN_OUT,\r\n    },\r\n    dispatch\r\n  );\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      loading: true,\r\n      authenticated: false,\r\n      user: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fbAuth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.props.UPDATE_USER(user);\r\n      } else {\r\n        this.setState({\r\n          authenticated: false,\r\n          currentUser: null,\r\n          loading: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSignOut = () => {\r\n    fbAuth\r\n      .signOut()\r\n      .then(() => {\r\n        this.props.SIGN_OUT();\r\n      })\r\n      .catch(function (error) {\r\n        // An error happened.\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main-container\">\r\n        <NavBar />\r\n        <main className=\" home-content\">\r\n          <ScrollToTop />\r\n          <Switch>\r\n            <Route path=\"/them-login\" component={Login} />\r\n            <Route path=\"/about-them\" component={About} />\r\n            <Route path=\"/services/:servicename\" component={Service} />\r\n            <Route path=\"/project/:projectname\" component={Project} />\r\n            <Route path=\"services/project/:projectname\" component={Project} />\r\n            <Route path=\"/portfolio\" component={Portfolio} />\r\n            <Route path=\"/contact\" component={Contact} />\r\n            <Route path=\"/feedback/:feedbackid\" component={FeedBack} />\r\n            <Route\r\n              exact\r\n              path=\"/services\"\r\n              render={(props) => (\r\n                <Services {...props} isAuthed={this.state.currentUser} />\r\n              )}\r\n            />\r\n            <Route path=\"/index\" component={IndexPage} />\r\n            <Route path=\"/sitemap\" component={Sitemap} />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/addservice\"\r\n              component={AddService}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/addprojectimages\"\r\n              component={AddProjectImages}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/addproject\"\r\n              component={AddProject}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/them-admin\"\r\n              component={Admin}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/editservice\"\r\n              component={EditService}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/emails\"\r\n              component={Emails}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/editproject\"\r\n              component={EditProject}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/pagecontents\"\r\n              component={PageContents}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/pagecontents/:contentid\"\r\n              component={PageContents}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/createreviewlinks\"\r\n              component={CreateReviewLinks}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/feedbacks\"\r\n              component={Feedbacks}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/feedbacks/:reviewid\"\r\n              component={Feedbacks}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <PrivateRoute\r\n              exact\r\n              path=\"/email/:email\"\r\n              component={EmailDetails}\r\n              authenticated={this.props.useractivity.authenticated}\r\n            />\r\n            <Redirect from=\"/\" exact to=\"/index\" component={IndexPage} />\r\n            <Route path=\"/webimages\" component={WebImages} />\r\n            <Redirect to=\"/not-found\" />\r\n          </Switch>\r\n        </main>\r\n\r\n        {this.props.useractivity.authenticated && (\r\n          <div className=\"container mt-5\">\r\n            <div className=\"d-flex flex-row\">\r\n              <div\r\n                className=\"d-flex flex-column\"\r\n                style={{\r\n                  padding: \"25px\",\r\n                }}\r\n              >\r\n                <ul className=\"list-group list-group-horizontal-md\">\r\n                  <li className=\"list-group-item\">\r\n                    <Link to=\"/them-admin\" className=\"align-self-center\">\r\n                      <User className=\"mr-3\" color=\"black\"></User>\r\n                      {this.props.useractivity.currentUser}\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <Link className=\"align-self-center\" to=\"/them-admin\">\r\n                      <Home className=\"mr-3\" color=\"black\"></Home>HOME\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <Link className=\"\" to=\"/emails\">\r\n                      <Mail className=\"mr-3\" color=\"black\"></Mail>EMAILS\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    <Link className=\"\" to=\"/feedbacks\">\r\n                      <Star className=\"mr-3\" color=\"gold\"></Star>FeedBacks\r\n                    </Link>\r\n                  </li>\r\n                  <li className=\"list-group-item bg-danger \">\r\n                    <a\r\n                      className=\"text-white\"\r\n                      onClick={() => this.handleSignOut()}\r\n                    >\r\n                      <Power className=\"mr-3\" color=\"white\"></Power>SIGN OUT\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { UPDATE_USER, SIGNOUT_USER } from \"../constants\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function useractivityReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case UPDATE_USER: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authenticated: true,\r\n        currentUser: action.auth.email,\r\n      };\r\n    }\r\n    case SIGNOUT_USER: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        authenticated: false,\r\n        currentUser: null,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport useractivity from \"./useractitvityReducer\";\r\nimport userdetails from \"./handleuserReducer\";\r\n\r\nexport default combineReducers({\r\n  useractivity,\r\n  userdetails,\r\n});\r\n","export const UPDATE_USER = \"UPDATE_USER\";\r\nexport const SIGNOUT_USER = \"SIGNOUT_USER\";","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"jquery/dist/jquery\";\r\nimport \"popper.js/dist/umd/popper\";\r\nimport \"bootstrap/dist/js/bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./css/custom.css\";\r\nimport store from \"./js/store/index\";\r\n\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}